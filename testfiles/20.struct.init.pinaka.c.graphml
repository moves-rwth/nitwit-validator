<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <key attr.name="originFileName" attr.type="string" for="edge" id="originfile">
    <default>../../sv-benchmarks/c/ldv-regression/test30_false-unreach-call_true-termination.c</default>
  </key>
  <key attr.name="invariant" attr.type="string" for="node" id="invariant"/>
  <key attr.name="invariant.scope" attr.type="string" for="node" id="invariant.scope"/>
  <key attr.name="nodeType" attr.type="string" for="node" id="nodetype">
    <default>path</default>
  </key>
  <key attr.name="isFrontierNode" attr.type="boolean" for="node" id="frontier">
    <default>false</default>
  </key>
  <key attr.name="isViolationNode" attr.type="boolean" for="node" id="violation">
    <default>false</default>
  </key>
  <key attr.name="isEntryNode" attr.type="boolean" for="node" id="entry">
    <default>false</default>
  </key>
  <key attr.name="isSinkNode" attr.type="boolean" for="node" id="sink">
    <default>false</default>
  </key>
  <key attr.name="enterLoopHead" attr.type="boolean" for="edge" id="enterLoopHead">
    <default>false</default>
  </key>
  <key attr.name="threadNumber" attr.type="int" for="node" id="thread">
    <default>0</default>
  </key>
  <key attr.name="sourcecodeLanguage" attr.type="string" for="graph" id="sourcecodelang"/>
  <key attr.name="programFile" attr.type="string" for="graph" id="programfile"/>
  <key attr.name="programHash" attr.type="string" for="graph" id="programhash"/>
  <key attr.name="specification" attr.type="string" for="graph" id="specification"/>
  <key attr.name="architecture" attr.type="string" for="graph" id="architecture"/>
  <key attr.name="producer" attr.type="string" for="graph" id="producer"/>
  <key attr.name="sourcecode" attr.type="string" for="edge" id="sourcecode"/>
  <key attr.name="startline" attr.type="int" for="edge" id="startline"/>
  <key attr.name="control" attr.type="string" for="edge" id="control"/>
  <key attr.name="assumption" attr.type="string" for="edge" id="assumption"/>
  <key attr.name="assumption.resultfunction" attr.type="string" for="edge" id="assumption.resultfunction"/>
  <key attr.name="assumption.scope" attr.type="string" for="edge" id="assumption.scope"/>
  <key attr.name="enterFunction" attr.type="string" for="edge" id="enterFunction"/>
  <key attr.name="returnFromFunction" attr.type="string" for="edge" id="returnFrom"/>
  <key attr.name="witness-type" attr.type="string" for="graph" id="witness-type"/>
  <graph edgedefault="directed">
    <data key="architecture">32bit</data>
    <data key="producer">Pinaka</data>
    <data key="programfile">../../sv-benchmarks/c/ldv-regression/test30_false-unreach-call_true-termination.c</data>
    <data key="programhash">00eccf3e88d698bf3100477fb06465e4f6064f0ac30946cf8af1aea4e1eae9ae</data>
    <data key="sourcecodelang">C</data>
    <data key="specification">CHECK( init(main()), LTL(G ! call(__VERIFIER_error())) )</data>
    <data key="witness-type">violation_witness</data>
    <node id="sink"/>
    <node id="3.20">
      <data key="entry">true</data>
    </node>
    <edge source="3.20" target="4.21">
      <data key="originfile">../../sv-benchmarks/c/ldv-regression/test30_false-unreach-call_true-termination.c</data>
      <data key="startline">21</data>
      <data key="assumption">pd == (&amp;global) ;</data>
      <data key="assumption.scope">main</data>
    </edge>
    <node id="4.21"/>
    <edge source="4.21" target="33.24">
      <data key="originfile">../../sv-benchmarks/c/ldv-regression/test30_false-unreach-call_true-termination.c</data>
      <data key="startline">23</data>
    </edge>
    <node id="33.24"/>
    <edge source="33.24" target="0.27">
      <data key="originfile">../../sv-benchmarks/c/ldv-regression/test30_false-unreach-call_true-termination.c</data>
      <data key="startline">16</data>
    </edge>
    <node id="0.27"/>
    <edge source="0.27" target="6.31">
      <data key="originfile">../../sv-benchmarks/c/ldv-regression/test30_false-unreach-call_true-termination.c</data>
      <data key="startline">11</data>
      <data key="assumption">b == (0) ;</data>
      <data key="assumption.scope">assign</data>
    </edge>
    <node id="6.31"/>
    <edge source="6.31" target="11.32">
      <data key="originfile">../../sv-benchmarks/c/ldv-regression/test30_false-unreach-call_true-termination.c</data>
      <data key="startline">25</data>
    </edge>
    <node id="11.32">
      <data key="violation">true</data>
    </node>
  </graph>
</graphml>
