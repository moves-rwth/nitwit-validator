<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
 <key attr.name="isViolationNode" attr.type="boolean" for="node" id="violation">
  <default>false</default>
 </key>
 <key attr.name="isEntryNode" attr.type="boolean" for="node" id="entry">
  <default>false</default>
 </key>
 <key attr.name="isSinkNode" attr.type="boolean" for="node" id="sink">
  <default>false</default>
 </key>
 <key attr.name="violatedProperty" attr.type="string" for="node" id="violatedProperty"/>
 <key attr.name="sourcecodeLanguage" attr.type="string" for="graph" id="sourcecodelang"/>
 <key attr.name="programFile" attr.type="string" for="graph" id="programfile"/>
 <key attr.name="programHash" attr.type="string" for="graph" id="programhash"/>
 <key attr.name="specification" attr.type="string" for="graph" id="specification"/>
 <key attr.name="architecture" attr.type="string" for="graph" id="architecture"/>
 <key attr.name="producer" attr.type="string" for="graph" id="producer"/>
 <key attr.name="creationTime" attr.type="string" for="graph" id="creationtime"/>
 <key attr.name="startline" attr.type="int" for="edge" id="startline"/>
 <key attr.name="endline" attr.type="int" for="edge" id="endline"/>
 <key attr.name="startoffset" attr.type="int" for="edge" id="startoffset"/>
 <key attr.name="endoffset" attr.type="int" for="edge" id="endoffset"/>
 <key attr.name="originFileName" attr.type="string" for="edge" id="originfile">
  <default>./SV-COMP_nan_float_.c</default>
 </key>
 <key attr.name="control" attr.type="string" for="edge" id="control"/>
 <key attr.name="assumption" attr.type="string" for="edge" id="assumption"/>
 <key attr.name="assumption.scope" attr.type="string" for="edge" id="assumption.scope"/>
 <key attr.name="enterFunction" attr.type="string" for="edge" id="enterFunction"/>
 <key attr.name="witness-type" attr.type="string" for="graph" id="witness-type"/>
 <key attr.name="inputWitnessHash" attr.type="string" for="graph" id="inputwitnesshash"/>
 <graph edgedefault="directed">
  <data key="witness-type">violation_witness</data>
  <data key="sourcecodelang">C</data>
  <data key="producer">CPAchecker 1.8-svn a776d662f5+ / kInduction</data>
  <data key="specification">CHECK( init(main()), LTL(G ! call(__VERIFIER_error())) )</data>
  <data key="programfile">./SV-COMP_nan_float_.c</data>
  <data key="programhash">732c5a0c7e99ce1ebe0abb411ff994af4752be5fc25f5b400e29590b09449135</data>
  <data key="architecture">32bit</data>
  <data key="creationtime">2019-06-07T10:03:53+02:00</data>
  <node id="A36">
   <data key="entry">true</data>
  </node>
  <node id="A60"/>
  <edge source="A36" target="A60">
   <data key="startline">8</data>
   <data key="endline">8</data>
   <data key="startoffset">377</data>
   <data key="endoffset">387</data>
   <data key="enterFunction">main</data>
  </edge>
  <node id="A81"/>
  <edge source="A60" target="A81">
   <data key="startline">13</data>
   <data key="endline">13</data>
   <data key="startoffset">437</data>
   <data key="endoffset">458</data>
   <data key="enterFunction">__VERIFIER_assert</data>
  </edge>
  <node id="A83">
   <data key="violation">true</data>
   <data key="violatedProperty">__VERIFIER_error(); called in line 6</data>
  </node>
  <edge source="A81" target="A83">
   <data key="startline">6</data>
   <data key="endline">6</data>
   <data key="startoffset">328</data>
   <data key="endoffset">331</data>
   <data key="control">condition-true</data>
   <data key="assumption">cond == (0);</data>
   <data key="assumption.scope">__VERIFIER_assert</data>
  </edge>
  <node id="sink">
   <data key="sink">true</data>
  </node>
  <edge source="A81" target="sink">
   <data key="startline">6</data>
   <data key="endline">6</data>
   <data key="startoffset">328</data>
   <data key="endoffset">331</data>
   <data key="control">condition-false</data>
  </edge>
 </graph>
</graphml>
