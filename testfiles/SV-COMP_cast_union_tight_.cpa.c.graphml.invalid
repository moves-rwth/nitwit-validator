<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
 <key attr.name="isViolationNode" attr.type="boolean" for="node" id="violation">
  <default>false</default>
 </key>
 <key attr.name="isEntryNode" attr.type="boolean" for="node" id="entry">
  <default>false</default>
 </key>
 <key attr.name="isSinkNode" attr.type="boolean" for="node" id="sink">
  <default>false</default>
 </key>
 <key attr.name="violatedProperty" attr.type="string" for="node" id="violatedProperty"/>
 <key attr.name="sourcecodeLanguage" attr.type="string" for="graph" id="sourcecodelang"/>
 <key attr.name="programFile" attr.type="string" for="graph" id="programfile"/>
 <key attr.name="programHash" attr.type="string" for="graph" id="programhash"/>
 <key attr.name="specification" attr.type="string" for="graph" id="specification"/>
 <key attr.name="architecture" attr.type="string" for="graph" id="architecture"/>
 <key attr.name="producer" attr.type="string" for="graph" id="producer"/>
 <key attr.name="creationTime" attr.type="string" for="graph" id="creationtime"/>
 <key attr.name="startline" attr.type="int" for="edge" id="startline"/>
 <key attr.name="endline" attr.type="int" for="edge" id="endline"/>
 <key attr.name="startoffset" attr.type="int" for="edge" id="startoffset"/>
 <key attr.name="endoffset" attr.type="int" for="edge" id="endoffset"/>
 <key attr.name="originFileName" attr.type="string" for="edge" id="originfile">
  <default>./SV-COMP_cast_union_tight_.c</default>
 </key>
 <key attr.name="control" attr.type="string" for="edge" id="control"/>
 <key attr.name="assumption" attr.type="string" for="edge" id="assumption"/>
 <key attr.name="assumption.scope" attr.type="string" for="edge" id="assumption.scope"/>
 <key attr.name="enterFunction" attr.type="string" for="edge" id="enterFunction"/>
 <key attr.name="returnFromFunction" attr.type="string" for="edge" id="returnFrom"/>
 <key attr.name="witness-type" attr.type="string" for="graph" id="witness-type"/>
 <key attr.name="inputWitnessHash" attr.type="string" for="graph" id="inputwitnesshash"/>
 <graph edgedefault="directed">
  <data key="witness-type">violation_witness</data>
  <data key="sourcecodelang">C</data>
  <data key="producer">CPAchecker 1.8-svn a776d662f5+ / kInduction</data>
  <data key="specification">CHECK( init(main()), LTL(G ! call(__VERIFIER_error())) )</data>
  <data key="programfile">./SV-COMP_cast_union_tight_.c</data>
  <data key="programhash">ef19ac9d60439bd02efffb2111a1fd303cdc9e9a90f3c12a346070881e9053ea</data>
  <data key="architecture">32bit</data>
  <data key="creationtime">2019-06-07T10:02:41+02:00</data>
  <node id="A20">
   <data key="entry">true</data>
  </node>
  <node id="A39"/>
  <edge source="A20" target="A39">
   <data key="startline">24</data>
   <data key="endline">24</data>
   <data key="startoffset">574</data>
   <data key="endoffset">584</data>
   <data key="enterFunction">main</data>
  </edge>
  <node id="A69"/>
  <edge source="A39" target="A69">
   <data key="startline">29</data>
   <data key="endline">29</data>
   <data key="startoffset">611</data>
   <data key="endoffset">637</data>
   <data key="assumption">a == (0);</data>
   <data key="assumption.scope">main</data>
  </edge>
  <node id="A73"/>
  <edge source="A69" target="A73">
   <data key="startline">31</data>
   <data key="endline">31</data>
   <data key="startoffset">647</data>
   <data key="endoffset">653</data>
   <data key="enterFunction">cast</data>
  </edge>
  <node id="A76"/>
  <edge source="A73" target="A76">
   <data key="startline">16</data>
   <data key="endline">16</data>
   <data key="startoffset">449</data>
   <data key="endoffset">457</data>
   <data key="assumption">i == (0);</data>
   <data key="assumption.scope">cast</data>
  </edge>
  <node id="A78"/>
  <edge source="A76" target="A78">
   <data key="startline">17</data>
   <data key="endline">17</data>
   <data key="startoffset">465</data>
   <data key="endoffset">483</data>
   <data key="assumption">((x.i)[0]) == (1127219200);</data>
   <data key="assumption.scope">cast</data>
  </edge>
  <node id="A80"/>
  <edge source="A78" target="A80">
   <data key="startline">18</data>
   <data key="endline">18</data>
   <data key="startoffset">488</data>
   <data key="endoffset">502</data>
   <data key="assumption">((y.i)[0]) == (1127219200);</data>
   <data key="assumption.scope">cast</data>
  </edge>
  <node id="A89"/>
  <edge source="A80" target="A89">
   <data key="startline">19</data>
   <data key="endline">19</data>
   <data key="startoffset">507</data>
   <data key="endoffset">525</data>
   <data key="assumption">((x.i)[1]) == (-2147483648);</data>
   <data key="assumption.scope">cast</data>
  </edge>
  <node id="A98"/>
  <edge source="A89" target="A98">
   <data key="startline">20</data>
   <data key="endline">20</data>
   <data key="startoffset">530</data>
   <data key="endoffset">548</data>
   <data key="assumption">((y.i)[1]) == (-2147483648);</data>
   <data key="assumption.scope">cast</data>
  </edge>
  <node id="A103"/>
  <edge source="A98" target="A103">
   <data key="startline">21</data>
   <data key="endline">21</data>
   <data key="startoffset">553</data>
   <data key="endoffset">566</data>
   <data key="returnFrom">cast</data>
  </edge>
  <node id="A108"/>
  <edge source="A103" target="A108">
   <data key="startline">32</data>
   <data key="endline">32</data>
   <data key="startoffset">658</data>
   <data key="endoffset">681</data>
   <data key="enterFunction">__VERIFIER_assert</data>
  </edge>
  <node id="A117">
   <data key="violation">true</data>
   <data key="violatedProperty">__VERIFIER_error(); called in line 7</data>
  </node>
  <edge source="A108" target="A117">
   <data key="startline">7</data>
   <data key="endline">7</data>
   <data key="startoffset">339</data>
   <data key="endoffset">342</data>
   <data key="control">condition-true</data>
   <data key="assumption">cond == (0);</data>
   <data key="assumption.scope">__VERIFIER_assert</data>
  </edge>
  <node id="sink">
   <data key="sink">true</data>
  </node>
  <edge source="A108" target="sink">
   <data key="startline">7</data>
   <data key="endline">7</data>
   <data key="startoffset">339</data>
   <data key="endoffset">342</data>
   <data key="control">condition-false</data>
  </edge>
 </graph>
</graphml>
