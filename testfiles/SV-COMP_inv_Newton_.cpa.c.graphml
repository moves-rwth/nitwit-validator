<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
 <key attr.name="isViolationNode" attr.type="boolean" for="node" id="violation">
  <default>false</default>
 </key>
 <key attr.name="isEntryNode" attr.type="boolean" for="node" id="entry">
  <default>false</default>
 </key>
 <key attr.name="isSinkNode" attr.type="boolean" for="node" id="sink">
  <default>false</default>
 </key>
 <key attr.name="enterLoopHead" attr.type="boolean" for="edge" id="enterLoopHead">
  <default>false</default>
 </key>
 <key attr.name="violatedProperty" attr.type="string" for="node" id="violatedProperty"/>
 <key attr.name="sourcecodeLanguage" attr.type="string" for="graph" id="sourcecodelang"/>
 <key attr.name="programFile" attr.type="string" for="graph" id="programfile"/>
 <key attr.name="programHash" attr.type="string" for="graph" id="programhash"/>
 <key attr.name="specification" attr.type="string" for="graph" id="specification"/>
 <key attr.name="architecture" attr.type="string" for="graph" id="architecture"/>
 <key attr.name="producer" attr.type="string" for="graph" id="producer"/>
 <key attr.name="creationTime" attr.type="string" for="graph" id="creationtime"/>
 <key attr.name="startline" attr.type="int" for="edge" id="startline"/>
 <key attr.name="endline" attr.type="int" for="edge" id="endline"/>
 <key attr.name="startoffset" attr.type="int" for="edge" id="startoffset"/>
 <key attr.name="endoffset" attr.type="int" for="edge" id="endoffset"/>
 <key attr.name="originFileName" attr.type="string" for="edge" id="originfile">
  <default>./SV-COMP_inv_Newton_.c</default>
 </key>
 <key attr.name="control" attr.type="string" for="edge" id="control"/>
 <key attr.name="assumption" attr.type="string" for="edge" id="assumption"/>
 <key attr.name="assumption.scope" attr.type="string" for="edge" id="assumption.scope"/>
 <key attr.name="enterFunction" attr.type="string" for="edge" id="enterFunction"/>
 <key attr.name="returnFromFunction" attr.type="string" for="edge" id="returnFrom"/>
 <key attr.name="witness-type" attr.type="string" for="graph" id="witness-type"/>
 <key attr.name="inputWitnessHash" attr.type="string" for="graph" id="inputwitnesshash"/>
 <graph edgedefault="directed">
  <data key="witness-type">violation_witness</data>
  <data key="sourcecodelang">C</data>
  <data key="producer">CPAchecker 1.8-svn a776d662f5+ / kInduction</data>
  <data key="specification">CHECK( init(main()), LTL(G ! call(__VERIFIER_error())) )</data>
  <data key="programfile">./SV-COMP_inv_Newton_.c</data>
  <data key="programhash">da3007ec5ca43436ced04c458c81d67de9f92bd823e285ec473127c9a315e927</data>
  <data key="architecture">32bit</data>
  <data key="creationtime">2019-06-07T10:05:22+02:00</data>
  <node id="A53">
   <data key="entry">true</data>
  </node>
  <node id="A88"/>
  <edge source="A53" target="A88">
   <data key="startline">46</data>
   <data key="endline">46</data>
   <data key="startoffset">881</data>
   <data key="endoffset">891</data>
   <data key="enterFunction">main</data>
  </edge>
  <node id="A110"/>
  <edge source="A88" target="A110">
   <data key="startline">50</data>
   <data key="endline">50</data>
   <data key="startoffset">911</data>
   <data key="endoffset">940</data>
   <data key="assumption">a == (22.822146805041292);</data>
   <data key="assumption.scope">main</data>
  </edge>
  <node id="A112"/>
  <edge source="A110" target="A112">
   <data key="startline">51</data>
   <data key="endline">51</data>
   <data key="startoffset">963</data>
   <data key="endoffset">970</data>
   <data key="assumption">a == (22.822146805041292);</data>
   <data key="assumption.scope">main</data>
  </edge>
  <node id="A120"/>
  <edge source="A112" target="A120">
   <data key="startline">51</data>
   <data key="endline">51</data>
   <data key="startoffset">975</data>
   <data key="endoffset">982</data>
   <data key="assumption">a == (22.822146805041292);</data>
   <data key="assumption.scope">main</data>
  </edge>
  <node id="A144"/>
  <edge source="A120" target="A144">
   <data key="startline">53</data>
   <data key="endline">53</data>
   <data key="startoffset">993</data>
   <data key="endoffset">998</data>
   <data key="enterFunction">inv</data>
  </edge>
  <node id="A150"/>
  <edge source="A144" target="A150">
   <data key="startline">28</data>
   <data key="endline">28</data>
   <data key="startoffset">520</data>
   <data key="endoffset">528</data>
   <data key="assumption">A == (22.822146805041292);</data>
   <data key="assumption.scope">inv</data>
  </edge>
  <node id="A172"/>
  <edge source="A150" target="A172">
   <data key="startline">31</data>
   <data key="endline">31</data>
   <data key="startoffset">598</data>
   <data key="endoffset">606</data>
   <data key="assumption">(A_u.d) == (22.822146805041292);</data>
   <data key="assumption.scope">inv</data>
  </edge>
  <node id="A175"/>
  <edge source="A172" target="A175">
   <data key="startline">32</data>
   <data key="endline">32</data>
   <data key="startoffset">611</data>
   <data key="endoffset">664</data>
   <data key="assumption">exp == (-151);</data>
   <data key="assumption.scope">inv</data>
  </edge>
  <node id="A177"/>
  <edge source="A175" target="A177">
   <data key="startline">33</data>
   <data key="endline">33</data>
   <data key="startoffset">669</data>
   <data key="endoffset">678</data>
   <data key="assumption">(xi_u.d) == (1.0);</data>
   <data key="assumption.scope">inv</data>
  </edge>
  <node id="A180"/>
  <edge source="A177" target="A180">
   <data key="startline">34</data>
   <data key="endline">34</data>
   <data key="startoffset">683</data>
   <data key="endoffset">709</data>
   <data key="assumption">(xi_u.i) == (1231028224);</data>
   <data key="assumption.scope">inv</data>
  </edge>
  <node id="A181"/>
  <edge source="A180" target="A181">
   <data key="startline">35</data>
   <data key="endline">35</data>
   <data key="startoffset">714</data>
   <data key="endoffset">724</data>
  </edge>
  <node id="A182"/>
  <edge source="A181" target="A182">
   <data key="enterLoopHead">true</data>
   <data key="startline">36</data>
   <data key="endline">36</data>
   <data key="startoffset">729</data>
   <data key="endoffset">736</data>
   <data key="assumption">cond == (1);</data>
   <data key="assumption.scope">inv</data>
  </edge>
  <node id="A190"/>
  <edge source="A182" target="A190">
   <data key="startline">37</data>
   <data key="endline">37</data>
   <data key="startoffset">748</data>
   <data key="endoffset">751</data>
   <data key="control">condition-true</data>
   <data key="assumption">cond == (1);</data>
   <data key="assumption.scope">inv</data>
  </edge>
  <node id="sink">
   <data key="sink">true</data>
  </node>
  <edge source="A182" target="sink">
   <data key="startline">37</data>
   <data key="endline">37</data>
   <data key="startoffset">748</data>
   <data key="endoffset">751</data>
   <data key="control">condition-false</data>
  </edge>
  <node id="A194"/>
  <edge source="A190" target="A194">
   <data key="startline">38</data>
   <data key="endline">38</data>
   <data key="startoffset">760</data>
   <data key="endoffset">777</data>
  </edge>
  <node id="A196"/>
  <edge source="A194" target="A196">
   <data key="startline">39</data>
   <data key="endline">39</data>
   <data key="startoffset">784</data>
   <data key="endoffset">796</data>
  </edge>
  <node id="A202"/>
  <edge source="A196" target="A202">
   <data key="startline">40</data>
   <data key="endline">40</data>
   <data key="startoffset">812</data>
   <data key="endoffset">823</data>
   <data key="control">condition-false</data>
  </edge>
  <edge source="A196" target="sink">
   <data key="startline">40</data>
   <data key="endline">40</data>
   <data key="startoffset">812</data>
   <data key="endoffset">823</data>
   <data key="control">condition-true</data>
  </edge>
  <node id="A206"/>
  <edge source="A202" target="A206">
   <data key="startline">40</data>
   <data key="endline">40</data>
   <data key="startoffset">830</data>
   <data key="endoffset">842</data>
   <data key="control">condition-false</data>
  </edge>
  <edge source="A202" target="sink">
   <data key="startline">40</data>
   <data key="endline">40</data>
   <data key="startoffset">830</data>
   <data key="endoffset">842</data>
   <data key="control">condition-true</data>
  </edge>
  <node id="A219"/>
  <edge source="A206" target="A219">
   <data key="startline">40</data>
   <data key="endline">40</data>
   <data key="startoffset">803</data>
   <data key="endoffset">844</data>
   <data key="assumption">cond == (0);</data>
   <data key="assumption.scope">inv</data>
  </edge>
  <node id="A220"/>
  <edge source="A219" target="A220">
   <data key="enterLoopHead">true</data>
   <data key="startline">41</data>
   <data key="endline">41</data>
   <data key="startoffset">851</data>
   <data key="endoffset">858</data>
  </edge>
  <node id="A923"/>
  <edge source="A220" target="A923">
   <data key="startline">37</data>
   <data key="endline">37</data>
   <data key="startoffset">748</data>
   <data key="endoffset">751</data>
   <data key="control">condition-false</data>
   <data key="assumption">cond == (0);</data>
   <data key="assumption.scope">inv</data>
  </edge>
  <edge source="A220" target="sink">
   <data key="startline">37</data>
   <data key="endline">37</data>
   <data key="startoffset">748</data>
   <data key="endoffset">751</data>
   <data key="control">condition-true</data>
  </edge>
  <node id="A940"/>
  <edge source="A923" target="A940">
   <data key="startline">43</data>
   <data key="endline">43</data>
   <data key="startoffset">867</data>
   <data key="endoffset">875</data>
   <data key="returnFrom">inv</data>
  </edge>
  <edge source="A940" target="sink">
   <data key="startline">55</data>
   <data key="endline">55</data>
   <data key="startoffset">1022</data>
   <data key="endoffset">1027</data>
   <data key="control">condition-true</data>
  </edge>
  <node id="A947"/>
  <edge source="A940" target="A947">
   <data key="startline">55</data>
   <data key="endline">55</data>
   <data key="startoffset">1022</data>
   <data key="endoffset">1027</data>
   <data key="control">condition-false</data>
  </edge>
  <node id="A951"/>
  <edge source="A947" target="A951">
   <data key="startline">55</data>
   <data key="endline">55</data>
   <data key="startoffset">1004</data>
   <data key="endoffset">1040</data>
   <data key="enterFunction">__VERIFIER_assert</data>
  </edge>
  <node id="A953">
   <data key="violation">true</data>
   <data key="violatedProperty">__VERIFIER_error(); called in line 18</data>
  </node>
  <edge source="A951" target="A953">
   <data key="startline">18</data>
   <data key="endline">18</data>
   <data key="startoffset">401</data>
   <data key="endoffset">404</data>
   <data key="control">condition-true</data>
   <data key="assumption">cond == (0);</data>
   <data key="assumption.scope">__VERIFIER_assert</data>
  </edge>
  <edge source="A951" target="sink">
   <data key="startline">18</data>
   <data key="endline">18</data>
   <data key="startoffset">401</data>
   <data key="endoffset">404</data>
   <data key="control">condition-false</data>
  </edge>
 </graph>
</graphml>
