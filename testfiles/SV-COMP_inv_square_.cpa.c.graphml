<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
 <key attr.name="isViolationNode" attr.type="boolean" for="node" id="violation">
  <default>false</default>
 </key>
 <key attr.name="isEntryNode" attr.type="boolean" for="node" id="entry">
  <default>false</default>
 </key>
 <key attr.name="isSinkNode" attr.type="boolean" for="node" id="sink">
  <default>false</default>
 </key>
 <key attr.name="violatedProperty" attr.type="string" for="node" id="violatedProperty"/>
 <key attr.name="sourcecodeLanguage" attr.type="string" for="graph" id="sourcecodelang"/>
 <key attr.name="programFile" attr.type="string" for="graph" id="programfile"/>
 <key attr.name="programHash" attr.type="string" for="graph" id="programhash"/>
 <key attr.name="specification" attr.type="string" for="graph" id="specification"/>
 <key attr.name="architecture" attr.type="string" for="graph" id="architecture"/>
 <key attr.name="producer" attr.type="string" for="graph" id="producer"/>
 <key attr.name="creationTime" attr.type="string" for="graph" id="creationtime"/>
 <key attr.name="startline" attr.type="int" for="edge" id="startline"/>
 <key attr.name="endline" attr.type="int" for="edge" id="endline"/>
 <key attr.name="startoffset" attr.type="int" for="edge" id="startoffset"/>
 <key attr.name="endoffset" attr.type="int" for="edge" id="endoffset"/>
 <key attr.name="originFileName" attr.type="string" for="edge" id="originfile">
  <default>./SV-COMP_inv_square_.c</default>
 </key>
 <key attr.name="control" attr.type="string" for="edge" id="control"/>
 <key attr.name="assumption" attr.type="string" for="edge" id="assumption"/>
 <key attr.name="assumption.scope" attr.type="string" for="edge" id="assumption.scope"/>
 <key attr.name="enterFunction" attr.type="string" for="edge" id="enterFunction"/>
 <key attr.name="witness-type" attr.type="string" for="graph" id="witness-type"/>
 <key attr.name="inputWitnessHash" attr.type="string" for="graph" id="inputwitnesshash"/>
 <graph edgedefault="directed">
  <data key="witness-type">violation_witness</data>
  <data key="sourcecodelang">C</data>
  <data key="producer">CPAchecker 1.8-svn a776d662f5+ / kInduction</data>
  <data key="specification">CHECK( init(main()), LTL(G ! call(__VERIFIER_error())) )</data>
  <data key="programfile">./SV-COMP_inv_square_.c</data>
  <data key="programhash">5ffe8ebc84abd7a595501476c1d76f28786e80cb6a2c4b34dd68eecf698fad66</data>
  <data key="architecture">32bit</data>
  <data key="creationtime">2019-06-07T10:03:39+02:00</data>
  <node id="A28">
   <data key="entry">true</data>
  </node>
  <node id="A48"/>
  <edge source="A28" target="A48">
   <data key="startline">10</data>
   <data key="endline">10</data>
   <data key="startoffset">427</data>
   <data key="endoffset">437</data>
   <data key="enterFunction">main</data>
  </edge>
  <node id="A77"/>
  <edge source="A48" target="A77">
   <data key="startline">14</data>
   <data key="endline">14</data>
   <data key="startoffset">460</data>
   <data key="endoffset">488</data>
   <data key="assumption">x == (1.401298464324817E-45);</data>
   <data key="assumption.scope">main</data>
  </edge>
  <node id="A86"/>
  <edge source="A77" target="A86">
   <data key="startline">15</data>
   <data key="endline">15</data>
   <data key="startoffset">511</data>
   <data key="endoffset">519</data>
   <data key="assumption">x == (1.401298464324817E-45);</data>
   <data key="assumption.scope">main</data>
  </edge>
  <node id="A93"/>
  <edge source="A86" target="A93">
   <data key="startline">15</data>
   <data key="endline">15</data>
   <data key="startoffset">524</data>
   <data key="endoffset">531</data>
   <data key="assumption">x == (1.401298464324817E-45);</data>
   <data key="assumption.scope">main</data>
  </edge>
  <node id="A112"/>
  <edge source="A93" target="A112">
   <data key="startline">17</data>
   <data key="endline">17</data>
   <data key="startoffset">542</data>
   <data key="endoffset">549</data>
   <data key="control">condition-true</data>
   <data key="assumption">x == (1.401298464324817E-45);</data>
   <data key="assumption.scope">main</data>
  </edge>
  <node id="sink">
   <data key="sink">true</data>
  </node>
  <edge source="A93" target="sink">
   <data key="startline">17</data>
   <data key="endline">17</data>
   <data key="startoffset">542</data>
   <data key="endoffset">549</data>
   <data key="control">condition-false</data>
  </edge>
  <node id="A116"/>
  <edge source="A112" target="A116">
   <data key="startline">18</data>
   <data key="endline">18</data>
   <data key="startoffset">558</data>
   <data key="endoffset">566</data>
   <data key="assumption">y == (0.0);</data>
   <data key="assumption.scope">main</data>
  </edge>
  <node id="A117"/>
  <edge source="A116" target="A117">
   <data key="startline">19</data>
   <data key="endline">19</data>
   <data key="startoffset">573</data>
   <data key="endoffset">598</data>
   <data key="enterFunction">__VERIFIER_assert</data>
  </edge>
  <node id="A121">
   <data key="violation">true</data>
   <data key="violatedProperty">__VERIFIER_error(); called in line 8</data>
  </node>
  <edge source="A117" target="A121">
   <data key="startline">8</data>
   <data key="endline">8</data>
   <data key="startoffset">378</data>
   <data key="endoffset">381</data>
   <data key="control">condition-true</data>
   <data key="assumption">cond == (0);</data>
   <data key="assumption.scope">__VERIFIER_assert</data>
  </edge>
  <edge source="A117" target="sink">
   <data key="startline">8</data>
   <data key="endline">8</data>
   <data key="startoffset">378</data>
   <data key="endoffset">381</data>
   <data key="control">condition-false</data>
  </edge>
 </graph>
</graphml>
