<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
 <key attr.name="isViolationNode" attr.type="boolean" for="node" id="violation">
  <default>false</default>
 </key>
 <key attr.name="isEntryNode" attr.type="boolean" for="node" id="entry">
  <default>false</default>
 </key>
 <key attr.name="isSinkNode" attr.type="boolean" for="node" id="sink">
  <default>false</default>
 </key>
 <key attr.name="violatedProperty" attr.type="string" for="node" id="violatedProperty"/>
 <key attr.name="sourcecodeLanguage" attr.type="string" for="graph" id="sourcecodelang"/>
 <key attr.name="programFile" attr.type="string" for="graph" id="programfile"/>
 <key attr.name="programHash" attr.type="string" for="graph" id="programhash"/>
 <key attr.name="specification" attr.type="string" for="graph" id="specification"/>
 <key attr.name="architecture" attr.type="string" for="graph" id="architecture"/>
 <key attr.name="producer" attr.type="string" for="graph" id="producer"/>
 <key attr.name="creationTime" attr.type="string" for="graph" id="creationtime"/>
 <key attr.name="startline" attr.type="int" for="edge" id="startline"/>
 <key attr.name="endline" attr.type="int" for="edge" id="endline"/>
 <key attr.name="startoffset" attr.type="int" for="edge" id="startoffset"/>
 <key attr.name="endoffset" attr.type="int" for="edge" id="endoffset"/>
 <key attr.name="originFileName" attr.type="string" for="edge" id="originfile">
  <default>./SV-COMP_cast_float_ptr_.c</default>
 </key>
 <key attr.name="control" attr.type="string" for="edge" id="control"/>
 <key attr.name="assumption" attr.type="string" for="edge" id="assumption"/>
 <key attr.name="assumption.scope" attr.type="string" for="edge" id="assumption.scope"/>
 <key attr.name="enterFunction" attr.type="string" for="edge" id="enterFunction"/>
 <key attr.name="witness-type" attr.type="string" for="graph" id="witness-type"/>
 <key attr.name="inputWitnessHash" attr.type="string" for="graph" id="inputwitnesshash"/>
 <graph edgedefault="directed">
  <data key="witness-type">violation_witness</data>
  <data key="sourcecodelang">C</data>
  <data key="producer">CPAchecker 1.8-svn a776d662f5+ / kInduction</data>
  <data key="specification">CHECK( init(main()), LTL(G ! call(__VERIFIER_error())) )</data>
  <data key="programfile">./SV-COMP_cast_float_ptr_.c</data>
  <data key="programhash">05d064d823d4eb58b9f4b05f6e71c7b1a0f46c0371ef400af19ee247d8a92611</data>
  <data key="architecture">32bit</data>
  <data key="creationtime">2019-06-07T10:01:42+02:00</data>
  <node id="A33">
   <data key="entry">true</data>
  </node>
  <node id="A61"/>
  <edge source="A33" target="A61">
   <data key="startline">30</data>
   <data key="endline">30</data>
   <data key="startoffset">790</data>
   <data key="endoffset">800</data>
   <data key="enterFunction">main</data>
  </edge>
  <node id="A118"/>
  <edge source="A61" target="A118">
   <data key="startline">35</data>
   <data key="endline">35</data>
   <data key="startoffset">829</data>
   <data key="endoffset">858</data>
   <data key="assumption">a == (1.3407807929942597E+154);</data>
   <data key="assumption.scope">main</data>
  </edge>
  <node id="A119"/>
  <edge source="A118" target="A119">
   <data key="startline">36</data>
   <data key="endline">36</data>
   <data key="startoffset">867</data>
   <data key="endoffset">873</data>
   <data key="enterFunction">cast</data>
  </edge>
  <node id="A121"/>
  <edge source="A119" target="A121">
   <data key="startline">8</data>
   <data key="endline">8</data>
   <data key="startoffset">408</data>
   <data key="endoffset">418</data>
   <data key="assumption">dmax == (2.6815615859885194E+154); d == (1.3407807929942597E+154);</data>
   <data key="assumption.scope">cast</data>
  </edge>
  <node id="sink">
   <data key="sink">true</data>
  </node>
  <edge source="A121" target="sink">
   <data key="startline">11</data>
   <data key="endline">11</data>
   <data key="startoffset">440</data>
   <data key="endoffset">486</data>
   <data key="control">condition-true</data>
  </edge>
  <node id="A145"/>
  <edge source="A121" target="A145">
   <data key="startline">11</data>
   <data key="endline">11</data>
   <data key="startoffset">440</data>
   <data key="endoffset">486</data>
   <data key="control">condition-false</data>
  </edge>
  <node id="A146"/>
  <edge source="A145" target="A146">
   <data key="startline">13</data>
   <data key="endline">13</data>
   <data key="startoffset">505</data>
   <data key="endoffset">538</data>
   <data key="assumption">(((unsigned *)(&amp;dmax))[0]) == (1206910975U);</data>
   <data key="assumption.scope">cast</data>
  </edge>
  <node id="A150"/>
  <edge source="A146" target="A150">
   <data key="startline">14</data>
   <data key="endline">14</data>
   <data key="startoffset">543</data>
   <data key="endoffset">576</data>
   <data key="assumption">(((unsigned *)(&amp;dmax))[1]) == (3758096384U);</data>
   <data key="assumption.scope">cast</data>
  </edge>
  <edge source="A150" target="sink">
   <data key="startline">16</data>
   <data key="endline">16</data>
   <data key="startoffset">586</data>
   <data key="endoffset">593</data>
   <data key="control">condition-true</data>
  </edge>
  <node id="A152"/>
  <edge source="A150" target="A152">
   <data key="startline">16</data>
   <data key="endline">16</data>
   <data key="startoffset">586</data>
   <data key="endoffset">593</data>
   <data key="control">condition-false</data>
   <data key="assumption">dmax == (2.6815615859885194E+154); d == (1.3407807929942597E+154);</data>
   <data key="assumption.scope">cast</data>
  </edge>
  <edge source="A152" target="sink">
   <data key="startline">19</data>
   <data key="endline">19</data>
   <data key="startoffset">646</data>
   <data key="endoffset">654</data>
   <data key="control">condition-true</data>
  </edge>
  <node id="A156"/>
  <edge source="A152" target="A156">
   <data key="startline">19</data>
   <data key="endline">19</data>
   <data key="startoffset">646</data>
   <data key="endoffset">654</data>
   <data key="control">condition-false</data>
   <data key="assumption">dmax == (2.6815615859885194E+154);</data>
   <data key="assumption.scope">cast</data>
  </edge>
  <node id="A162"/>
  <edge source="A156" target="A162">
   <data key="startline">23</data>
   <data key="endline">23</data>
   <data key="startoffset">727</data>
   <data key="endoffset">739</data>
   <data key="control">condition-true</data>
   <data key="assumption">d == (1.3407807929942597E+154);</data>
   <data key="assumption.scope">cast</data>
  </edge>
  <edge source="A156" target="sink">
   <data key="startline">23</data>
   <data key="endline">23</data>
   <data key="startoffset">727</data>
   <data key="endoffset">739</data>
   <data key="control">condition-false</data>
  </edge>
  <edge source="A162" target="sink">
   <data key="startline">23</data>
   <data key="endline">23</data>
   <data key="startoffset">744</data>
   <data key="endoffset">755</data>
   <data key="control">condition-true</data>
  </edge>
  <node id="A190"/>
  <edge source="A162" target="A190">
   <data key="startline">23</data>
   <data key="endline">23</data>
   <data key="startoffset">744</data>
   <data key="endoffset">755</data>
   <data key="control">condition-false</data>
   <data key="assumption">d == (1.3407807929942597E+154);</data>
   <data key="assumption.scope">cast</data>
  </edge>
  <node id="A195"/>
  <edge source="A190" target="A195">
   <data key="startline">23</data>
   <data key="endline">23</data>
   <data key="startoffset">709</data>
   <data key="endoffset">755</data>
   <data key="enterFunction">__VERIFIER_assert</data>
  </edge>
  <node id="A197">
   <data key="violation">true</data>
   <data key="violatedProperty">__VERIFIER_error(); called in line 3</data>
  </node>
  <edge source="A195" target="A197">
   <data key="startline">3</data>
   <data key="endline">3</data>
   <data key="startoffset">333</data>
   <data key="endoffset">336</data>
   <data key="control">condition-true</data>
   <data key="assumption">cond == (0);</data>
   <data key="assumption.scope">__VERIFIER_assert</data>
  </edge>
  <edge source="A195" target="sink">
   <data key="startline">3</data>
   <data key="endline">3</data>
   <data key="startoffset">333</data>
   <data key="endoffset">336</data>
   <data key="control">condition-false</data>
  </edge>
 </graph>
</graphml>
