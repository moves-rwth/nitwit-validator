<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
 <key attr.name="isViolationNode" attr.type="boolean" for="node" id="violation">
  <default>false</default>
 </key>
 <key attr.name="isEntryNode" attr.type="boolean" for="node" id="entry">
  <default>false</default>
 </key>
 <key attr.name="isSinkNode" attr.type="boolean" for="node" id="sink">
  <default>false</default>
 </key>
 <key attr.name="violatedProperty" attr.type="string" for="node" id="violatedProperty"/>
 <key attr.name="sourcecodeLanguage" attr.type="string" for="graph" id="sourcecodelang"/>
 <key attr.name="programFile" attr.type="string" for="graph" id="programfile"/>
 <key attr.name="programHash" attr.type="string" for="graph" id="programhash"/>
 <key attr.name="specification" attr.type="string" for="graph" id="specification"/>
 <key attr.name="architecture" attr.type="string" for="graph" id="architecture"/>
 <key attr.name="producer" attr.type="string" for="graph" id="producer"/>
 <key attr.name="creationTime" attr.type="string" for="graph" id="creationtime"/>
 <key attr.name="startline" attr.type="int" for="edge" id="startline"/>
 <key attr.name="endline" attr.type="int" for="edge" id="endline"/>
 <key attr.name="startoffset" attr.type="int" for="edge" id="startoffset"/>
 <key attr.name="endoffset" attr.type="int" for="edge" id="endoffset"/>
 <key attr.name="originFileName" attr.type="string" for="edge" id="originfile">
  <default>./01.assume.c</default>
 </key>
 <key attr.name="control" attr.type="string" for="edge" id="control"/>
 <key attr.name="assumption" attr.type="string" for="edge" id="assumption"/>
 <key attr.name="assumption.scope" attr.type="string" for="edge" id="assumption.scope"/>
 <key attr.name="enterFunction" attr.type="string" for="edge" id="enterFunction"/>
 <key attr.name="returnFromFunction" attr.type="string" for="edge" id="returnFrom"/>
 <key attr.name="witness-type" attr.type="string" for="graph" id="witness-type"/>
 <key attr.name="inputWitnessHash" attr.type="string" for="graph" id="inputwitnesshash"/>
 <graph edgedefault="directed">
  <data key="witness-type">violation_witness</data>
  <data key="sourcecodelang">C</data>
  <data key="producer">CPAchecker 1.8-svn / kInduction</data>
  <data key="specification">CHECK( init(main()), LTL(G ! call(__VERIFIER_error())) )</data>
  <data key="programfile">./01.assume.c</data>
  <data key="programhash">9483b29c9a3e49f849d7b124e252c168d7fab0b3b7dd76c199f22313f9333532</data>
  <data key="architecture">32bit</data>
  <data key="creationtime">2019-04-28T14:28:21+02:00</data>
  <node id="A37">
   <data key="entry">true</data>
  </node>
  <node id="A88"/>
  <edge source="A37" target="A88">
   <data key="startline">14</data>
   <data key="endline">14</data>
   <data key="startoffset">311</data>
   <data key="endoffset">321</data>
   <data key="enterFunction">main</data>
  </edge>
  <node id="A89"/>
  <edge source="A88" target="A89">
   <data key="startline">15</data>
   <data key="endline">15</data>
   <data key="startoffset">328</data>
   <data key="endoffset">334</data>
   <data key="enterFunction">step</data>
  </edge>
  <node id="A91"/>
  <edge source="A89" target="A91">
   <data key="startline">11</data>
   <data key="endline">11</data>
   <data key="startoffset">300</data>
   <data key="endoffset">305</data>
   <data key="enterFunction">one</data>
  </edge>
  <node id="A93"/>
  <edge source="A91" target="A93">
   <data key="startline">5</data>
   <data key="endline">5</data>
   <data key="startoffset">251</data>
   <data key="endoffset">260</data>
   <data key="assumption">foo == (1);</data>
   <data key="assumption.scope">one</data>
   <data key="returnFrom">one</data>
  </edge>
  <node id="A96"/>
  <edge source="A93" target="A96">
   <data key="startline">15</data>
   <data key="endline">15</data>
   <data key="startoffset">328</data>
   <data key="endoffset">334</data>
   <data key="returnFrom">step</data>
  </edge>
  <node id="A97"/>
  <edge source="A96" target="A97">
   <data key="startline">16</data>
   <data key="endline">16</data>
   <data key="startoffset">340</data>
   <data key="endoffset">365</data>
   <data key="assumption">x == (1);</data>
   <data key="assumption.scope">main</data>
  </edge>
  <node id="A98">
   <data key="violation">true</data>
   <data key="violatedProperty">__VERIFIER_error(); called in line 18</data>
  </node>
  <edge source="A97" target="A98">
   <data key="startline">17</data>
   <data key="endline">17</data>
   <data key="startoffset">375</data>
   <data key="endoffset">380</data>
   <data key="control">condition-true</data>
   <data key="assumption">x == (1);</data>
   <data key="assumption.scope">main</data>
  </edge>
  <node id="sink">
   <data key="sink">true</data>
  </node>
  <edge source="A97" target="sink">
   <data key="startline">17</data>
   <data key="endline">17</data>
   <data key="startoffset">375</data>
   <data key="endoffset">380</data>
   <data key="control">condition-false</data>
  </edge>
 </graph>
</graphml>
