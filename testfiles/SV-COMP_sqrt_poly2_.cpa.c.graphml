<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
 <key attr.name="isViolationNode" attr.type="boolean" for="node" id="violation">
  <default>false</default>
 </key>
 <key attr.name="isEntryNode" attr.type="boolean" for="node" id="entry">
  <default>false</default>
 </key>
 <key attr.name="isSinkNode" attr.type="boolean" for="node" id="sink">
  <default>false</default>
 </key>
 <key attr.name="violatedProperty" attr.type="string" for="node" id="violatedProperty"/>
 <key attr.name="sourcecodeLanguage" attr.type="string" for="graph" id="sourcecodelang"/>
 <key attr.name="programFile" attr.type="string" for="graph" id="programfile"/>
 <key attr.name="programHash" attr.type="string" for="graph" id="programhash"/>
 <key attr.name="specification" attr.type="string" for="graph" id="specification"/>
 <key attr.name="architecture" attr.type="string" for="graph" id="architecture"/>
 <key attr.name="producer" attr.type="string" for="graph" id="producer"/>
 <key attr.name="creationTime" attr.type="string" for="graph" id="creationtime"/>
 <key attr.name="startline" attr.type="int" for="edge" id="startline"/>
 <key attr.name="endline" attr.type="int" for="edge" id="endline"/>
 <key attr.name="startoffset" attr.type="int" for="edge" id="startoffset"/>
 <key attr.name="endoffset" attr.type="int" for="edge" id="endoffset"/>
 <key attr.name="originFileName" attr.type="string" for="edge" id="originfile">
  <default>./SV-COMP_sqrt_poly2_.c</default>
 </key>
 <key attr.name="control" attr.type="string" for="edge" id="control"/>
 <key attr.name="assumption" attr.type="string" for="edge" id="assumption"/>
 <key attr.name="assumption.scope" attr.type="string" for="edge" id="assumption.scope"/>
 <key attr.name="enterFunction" attr.type="string" for="edge" id="enterFunction"/>
 <key attr.name="returnFromFunction" attr.type="string" for="edge" id="returnFrom"/>
 <key attr.name="witness-type" attr.type="string" for="graph" id="witness-type"/>
 <key attr.name="inputWitnessHash" attr.type="string" for="graph" id="inputwitnesshash"/>
 <graph edgedefault="directed">
  <data key="witness-type">violation_witness</data>
  <data key="sourcecodelang">C</data>
  <data key="producer">CPAchecker 1.8-svn a776d662f5+ / kInduction</data>
  <data key="specification">CHECK( init(main()), LTL(G ! call(__VERIFIER_error())) )</data>
  <data key="programfile">./SV-COMP_sqrt_poly2_.c</data>
  <data key="programhash">4e353031310d806cc0996328c4767650523a7d3c2ffa9ed6e5abafee57b65cf0</data>
  <data key="architecture">32bit</data>
  <data key="creationtime">2019-06-07T10:04:25+02:00</data>
  <node id="A28">
   <data key="entry">true</data>
  </node>
  <node id="A55"/>
  <edge source="A28" target="A55">
   <data key="startline">51</data>
   <data key="endline">51</data>
   <data key="startoffset">963</data>
   <data key="endoffset">973</data>
   <data key="enterFunction">main</data>
  </edge>
  <node id="A58"/>
  <edge source="A55" target="A58">
   <data key="startline">55</data>
   <data key="endline">55</data>
   <data key="startoffset">993</data>
   <data key="endoffset">1022</data>
   <data key="assumption">x == (3420990.281062682);</data>
   <data key="assumption.scope">main</data>
  </edge>
  <node id="A60"/>
  <edge source="A58" target="A60">
   <data key="startline">56</data>
   <data key="endline">56</data>
   <data key="startoffset">1045</data>
   <data key="endoffset">1051</data>
   <data key="assumption">x == (3420990.281062682);</data>
   <data key="assumption.scope">main</data>
  </edge>
  <node id="A62"/>
  <edge source="A60" target="A62">
   <data key="startline">56</data>
   <data key="endline">56</data>
   <data key="startoffset">1056</data>
   <data key="endoffset">1064</data>
   <data key="assumption">x == (3420990.281062682);</data>
   <data key="assumption.scope">main</data>
  </edge>
  <node id="A70"/>
  <edge source="A62" target="A70">
   <data key="startline">58</data>
   <data key="endline">58</data>
   <data key="startoffset">1075</data>
   <data key="endoffset">1088</data>
   <data key="enterFunction">sqrt_custom</data>
  </edge>
  <node id="A72"/>
  <edge source="A70" target="A72">
   <data key="startline">26</data>
   <data key="endline">26</data>
   <data key="startoffset">651</data>
   <data key="endoffset">659</data>
   <data key="assumption">a == (3420990.281062682);</data>
   <data key="assumption.scope">sqrt_custom</data>
  </edge>
  <node id="A75"/>
  <edge source="A72" target="A75">
   <data key="startline">30</data>
   <data key="endline">30</data>
   <data key="startoffset">688</data>
   <data key="endoffset">694</data>
   <data key="assumption">(x.d) == (3420990.281062682);</data>
   <data key="assumption.scope">sqrt_custom</data>
  </edge>
  <node id="A76"/>
  <edge source="A75" target="A76">
   <data key="startline">32</data>
   <data key="endline">32</data>
   <data key="startoffset">700</data>
   <data key="endoffset">732</data>
   <data key="assumption">exp == (4);</data>
   <data key="assumption.scope">sqrt_custom</data>
  </edge>
  <node id="A77"/>
  <edge source="A76" target="A77">
   <data key="startline">33</data>
   <data key="endline">33</data>
   <data key="startoffset">737</data>
   <data key="endoffset">779</data>
   <data key="assumption">((x.i)[0]) == (1072693248);</data>
   <data key="assumption.scope">sqrt_custom</data>
  </edge>
  <node id="A78"/>
  <edge source="A77" target="A78">
   <data key="startline">34</data>
   <data key="endline">34</data>
   <data key="startoffset">784</data>
   <data key="endoffset">796</data>
   <data key="assumption">r == (1710495.140531341);</data>
   <data key="assumption.scope">sqrt_custom</data>
  </edge>
  <node id="A79"/>
  <edge source="A78" target="A79">
   <data key="startline">36</data>
   <data key="endline">36</data>
   <data key="startoffset">802</data>
   <data key="endoffset">829</data>
   <data key="assumption">r == (-5.9533383537006502E+17);</data>
   <data key="assumption.scope">sqrt_custom</data>
  </edge>
  <node id="A80"/>
  <edge source="A79" target="A80">
   <data key="startline">38</data>
   <data key="endline">38</data>
   <data key="startoffset">839</data>
   <data key="endoffset">850</data>
   <data key="control">condition-true</data>
  </edge>
  <node id="sink">
   <data key="sink">true</data>
  </node>
  <edge source="A79" target="sink">
   <data key="startline">38</data>
   <data key="endline">38</data>
   <data key="startoffset">839</data>
   <data key="endoffset">850</data>
   <data key="control">condition-false</data>
  </edge>
  <node id="A85"/>
  <edge source="A80" target="A85">
   <data key="startline">39</data>
   <data key="endline">39</data>
   <data key="startoffset">859</data>
   <data key="endoffset">863</data>
   <data key="assumption">exp == (5);</data>
   <data key="assumption.scope">sqrt_custom</data>
  </edge>
  <node id="A89"/>
  <edge source="A85" target="A89">
   <data key="startline">45</data>
   <data key="endline">45</data>
   <data key="startoffset">902</data>
   <data key="endoffset">929</data>
   <data key="assumption">((x.i)[0]) == (537919488);</data>
   <data key="assumption.scope">sqrt_custom</data>
  </edge>
  <node id="A90"/>
  <edge source="A89" target="A90">
   <data key="startline">46</data>
   <data key="endline">46</data>
   <data key="startoffset">934</data>
   <data key="endoffset">944</data>
   <data key="assumption">r == (-2.0366312647887634E+24);</data>
   <data key="assumption.scope">sqrt_custom</data>
  </edge>
  <node id="A91"/>
  <edge source="A90" target="A91">
   <data key="startline">48</data>
   <data key="endline">48</data>
   <data key="startoffset">950</data>
   <data key="endoffset">957</data>
   <data key="returnFrom">sqrt_custom</data>
  </edge>
  <edge source="A91" target="sink">
   <data key="startline">60</data>
   <data key="endline">60</data>
   <data key="startoffset">1112</data>
   <data key="endoffset">1118</data>
   <data key="control">condition-true</data>
  </edge>
  <node id="A98"/>
  <edge source="A91" target="A98">
   <data key="startline">60</data>
   <data key="endline">60</data>
   <data key="startoffset">1112</data>
   <data key="endoffset">1118</data>
   <data key="control">condition-false</data>
   <data key="assumption">y == (-2.0366312647887634E+24);</data>
   <data key="assumption.scope">main</data>
  </edge>
  <node id="A102"/>
  <edge source="A98" target="A102">
   <data key="startline">60</data>
   <data key="endline">60</data>
   <data key="startoffset">1094</data>
   <data key="endoffset">1130</data>
   <data key="enterFunction">__VERIFIER_assert</data>
  </edge>
  <node id="A104">
   <data key="violation">true</data>
   <data key="violatedProperty">__VERIFIER_error(); called in line 9</data>
  </node>
  <edge source="A102" target="A104">
   <data key="startline">9</data>
   <data key="endline">9</data>
   <data key="startoffset">377</data>
   <data key="endoffset">380</data>
   <data key="control">condition-true</data>
   <data key="assumption">cond == (0);</data>
   <data key="assumption.scope">__VERIFIER_assert</data>
  </edge>
  <edge source="A102" target="sink">
   <data key="startline">9</data>
   <data key="endline">9</data>
   <data key="startoffset">377</data>
   <data key="endoffset">380</data>
   <data key="control">condition-false</data>
  </edge>
 </graph>
</graphml>
