<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <key attr.name="originFileName" attr.type="string" for="edge" id="originfile">
    <default>&lt;command-line&gt;</default>
  </key>
  <key attr.name="invariant" attr.type="string" for="node" id="invariant"/>
  <key attr.name="invariant.scope" attr.type="string" for="node" id="invariant.scope"/>
  <key attr.name="nodeType" attr.type="string" for="node" id="nodetype">
    <default>path</default>
  </key>
  <key attr.name="isFrontierNode" attr.type="boolean" for="node" id="frontier">
    <default>false</default>
  </key>
  <key attr.name="isViolationNode" attr.type="boolean" for="node" id="violation">
    <default>false</default>
  </key>
  <key attr.name="isEntryNode" attr.type="boolean" for="node" id="entry">
    <default>false</default>
  </key>
  <key attr.name="isSinkNode" attr.type="boolean" for="node" id="sink">
    <default>false</default>
  </key>
  <key attr.name="enterLoopHead" attr.type="boolean" for="edge" id="enterLoopHead">
    <default>false</default>
  </key>
  <key attr.name="threadNumber" attr.type="int" for="node" id="thread">
    <default>0</default>
  </key>
  <key attr.name="sourcecodeLanguage" attr.type="string" for="graph" id="sourcecodelang"/>
  <key attr.name="programFile" attr.type="string" for="graph" id="programfile"/>
  <key attr.name="programHash" attr.type="string" for="graph" id="programhash"/>
  <key attr.name="specification" attr.type="string" for="graph" id="specification"/>
  <key attr.name="architecture" attr.type="string" for="graph" id="architecture"/>
  <key attr.name="producer" attr.type="string" for="graph" id="producer"/>
  <key attr.name="sourcecode" attr.type="string" for="edge" id="sourcecode"/>
  <key attr.name="startline" attr.type="int" for="edge" id="startline"/>
  <key attr.name="control" attr.type="string" for="edge" id="control"/>
  <key attr.name="assumption" attr.type="string" for="edge" id="assumption"/>
  <key attr.name="assumption.resultfunction" attr.type="string" for="edge" id="assumption.resultfunction"/>
  <key attr.name="assumption.scope" attr.type="string" for="edge" id="assumption.scope"/>
  <key attr.name="enterFunction" attr.type="string" for="edge" id="enterFunction"/>
  <key attr.name="returnFromFunction" attr.type="string" for="edge" id="returnFrom"/>
  <key attr.name="witness-type" attr.type="string" for="graph" id="witness-type"/>
  <graph edgedefault="directed">
    <data key="sourcecodelang">C</data>
    <node id="sink"/>
    <node id="2.20">
      <data key="entry">true</data>
    </node>
    <edge source="2.20" target="3.21">
      <data key="originfile">21.bitfield.c</data>
      <data key="startline">17</data>
      <data key="assumption">s.a = 1; s.b = 0; s.c = 0; s.d = 0; s.e = 0;</data>
      <data key="assumption.scope">main</data>
    </edge>
    <node id="3.21"/>
    <edge source="3.21" target="4.22">
      <data key="originfile">21.bitfield.c</data>
      <data key="startline">18</data>
      <data key="assumption">s.a = 1; s.b = 1; s.c = 0; s.d = 0; s.e = 0;</data>
      <data key="assumption.scope">main</data>
    </edge>
    <node id="4.22"/>
    <edge source="4.22" target="5.23">
      <data key="originfile">21.bitfield.c</data>
      <data key="startline">19</data>
      <data key="assumption">s.a = 1; s.b = 1; s.c = 1; s.d = 0; s.e = 0;</data>
      <data key="assumption.scope">main</data>
    </edge>
    <node id="5.23"/>
    <edge source="5.23" target="6.24">
      <data key="originfile">21.bitfield.c</data>
      <data key="startline">20</data>
      <data key="assumption">s.a = 1; s.b = 1; s.c = 1; s.d = 9; s.e = 0;</data>
      <data key="assumption.scope">main</data>
    </edge>
    <node id="6.24"/>
    <edge source="6.24" target="8.26">
      <data key="originfile">21.bitfield.c</data>
      <data key="startline">21</data>
      <data key="assumption">s.a = 1; s.b = 1; s.c = 1; s.d = 9; s.e = 9;</data>
      <data key="assumption.scope">main</data>
    </edge>
    <node id="8.26"/>
    <edge source="8.26" target="9.27">
      <data key="originfile">21.bitfield.c</data>
      <data key="startline">23</data>
      <data key="assumption">s.a = 0; s.b = 1; s.c = 1; s.d = 9; s.e = 9;</data>
      <data key="assumption.scope">main</data>
    </edge>
    <node id="9.27"/>
    <edge source="9.27" target="10.28">
      <data key="originfile">21.bitfield.c</data>
      <data key="startline">24</data>
      <data key="assumption">s.a = 0; s.b = 2; s.c = 1; s.d = 9; s.e = 9;</data>
      <data key="assumption.scope">main</data>
    </edge>
    <node id="10.28"/>
    <edge source="10.28" target="11.29">
      <data key="originfile">21.bitfield.c</data>
      <data key="startline">25</data>
      <data key="assumption">s.a = 0; s.b = 2; s.c = 2; s.d = 9; s.e = 9;</data>
      <data key="assumption.scope">main</data>
    </edge>
    <node id="11.29"/>
    <edge source="11.29" target="12.30">
      <data key="originfile">21.bitfield.c</data>
      <data key="startline">26</data>
      <data key="assumption">s.a = 0; s.b = 2; s.c = 2; s.d = 10; s.e = 9;</data>
      <data key="assumption.scope">main</data>
    </edge>
    <node id="12.30"/>
    <edge source="12.30" target="14.32">
      <data key="originfile">21.bitfield.c</data>
      <data key="startline">27</data>
      <data key="assumption">s.a = 0; s.b = 2; s.c = 2; s.d = 10; s.e = 10;</data>
      <data key="assumption.scope">main</data>
    </edge>
    <node id="14.32"/>
    <edge source="14.32" target="15.33">
      <data key="originfile">21.bitfield.c</data>
      <data key="startline">29</data>
      <data key="assumption">s.a = 0; s.b = 2; s.c = 2; s.d = 10; s.e = 10;</data>
      <data key="assumption.scope">main</data>
    </edge>
    <node id="15.33"/>
    <edge source="15.33" target="16.34">
      <data key="originfile">21.bitfield.c</data>
      <data key="startline">30</data>
      <data key="assumption">s.a = 0; s.b = 0; s.c = 2; s.d = 10; s.e = 10;</data>
      <data key="assumption.scope">main</data>
    </edge>
    <node id="16.34"/>
    <edge source="16.34" target="17.35">
      <data key="originfile">21.bitfield.c</data>
      <data key="startline">31</data>
      <data key="assumption">s.a = 0; s.b = 0; s.c = 0; s.d = 10; s.e = 10;</data>
      <data key="assumption.scope">main</data>
    </edge>
    <node id="17.35"/>
    <edge source="17.35" target="18.36">
      <data key="originfile">21.bitfield.c</data>
      <data key="startline">32</data>
      <data key="assumption">s.a = 0; s.b = 0; s.c = 0; s.d = 8; s.e = 10;</data>
      <data key="assumption.scope">main</data>
    </edge>
    <node id="18.36"/>
    <edge source="18.36" target="20.38">
      <data key="originfile">21.bitfield.c</data>
      <data key="startline">33</data>
      <data key="assumption">s.a = 0; s.b = 0; s.c = 0; s.d = 8; s.e = 8;</data>
      <data key="assumption.scope">main</data>
    </edge>
    <node id="20.38"/>
    <edge source="20.38" target="22.40">
      <data key="originfile">21.bitfield.c</data>
      <data key="startline">35</data>
      <data key="assumption">s2.a = 0; s2.b = 0; s2.c = 0; s2.d = 8; s2.e = 8;</data>
      <data key="assumption.scope">main</data>
    </edge>
    <node id="22.40"/>
    <edge source="22.40" target="23.41">
      <data key="originfile">21.bitfield.c</data>
      <data key="startline">37</data>
      <data key="sourcecode">[!(!((signed int)s2!0@1#2.a == 0) || !((signed int)s2!0@1#2.b == 0) || !((signed int)s2!0@1#2.c == 0) || !((signed int)s2!0@1#2.d == -8) || !((signed int)s2!0@1#2.e == -8))]</data>
    </edge>
    <node id="23.41">
      <data key="violation">true</data>
    </node>
    <edge source="23.41" target="sink">
      <data key="originfile">21.bitfield.c</data>
      <data key="startline">38</data>
    </edge>
  </graph>
</graphml>
