<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
 <key attr.name="isViolationNode" attr.type="boolean" for="node" id="violation">
  <default>false</default>
 </key>
 <key attr.name="isEntryNode" attr.type="boolean" for="node" id="entry">
  <default>false</default>
 </key>
 <key attr.name="isSinkNode" attr.type="boolean" for="node" id="sink">
  <default>false</default>
 </key>
 <key attr.name="enterLoopHead" attr.type="boolean" for="edge" id="enterLoopHead">
  <default>false</default>
 </key>
 <key attr.name="violatedProperty" attr.type="string" for="node" id="violatedProperty"/>
 <key attr.name="sourcecodeLanguage" attr.type="string" for="graph" id="sourcecodelang"/>
 <key attr.name="programFile" attr.type="string" for="graph" id="programfile"/>
 <key attr.name="programHash" attr.type="string" for="graph" id="programhash"/>
 <key attr.name="specification" attr.type="string" for="graph" id="specification"/>
 <key attr.name="architecture" attr.type="string" for="graph" id="architecture"/>
 <key attr.name="producer" attr.type="string" for="graph" id="producer"/>
 <key attr.name="creationTime" attr.type="string" for="graph" id="creationtime"/>
 <key attr.name="startline" attr.type="int" for="edge" id="startline"/>
 <key attr.name="endline" attr.type="int" for="edge" id="endline"/>
 <key attr.name="startoffset" attr.type="int" for="edge" id="startoffset"/>
 <key attr.name="endoffset" attr.type="int" for="edge" id="endoffset"/>
 <key attr.name="originFileName" attr.type="string" for="edge" id="originfile">
  <default>./23.thesis.gcl.c</default>
 </key>
 <key attr.name="control" attr.type="string" for="edge" id="control"/>
 <key attr.name="assumption" attr.type="string" for="edge" id="assumption"/>
 <key attr.name="assumption.resultfunction" attr.type="string" for="edge" id="assumption.resultfunction"/>
 <key attr.name="assumption.scope" attr.type="string" for="edge" id="assumption.scope"/>
 <key attr.name="enterFunction" attr.type="string" for="edge" id="enterFunction"/>
 <key attr.name="witness-type" attr.type="string" for="graph" id="witness-type"/>
 <key attr.name="inputWitnessHash" attr.type="string" for="graph" id="inputwitnesshash"/>
 <graph edgedefault="directed">
  <data key="witness-type">violation_witness</data>
  <data key="sourcecodelang">C</data>
  <data key="producer">CPAchecker 1.8-svn a776d662f5+ / kInduction</data>
  <data key="specification">CHECK( init(main()), LTL(G ! call(__VERIFIER_error())) )</data>
  <data key="programfile">./23.thesis.gcl.c</data>
  <data key="programhash">d8f92a645a782f6ec8324bbcf60d5753cb4e87ecf37c237d19f8791d0c6d9cae</data>
  <data key="architecture">32bit</data>
  <data key="creationtime">2019-09-18T12:27:27+02:00</data>
  <node id="A11">
   <data key="entry">true</data>
  </node>
  <node id="A16"/>
  <edge source="A11" target="A16">
   <data key="startline">4</data>
   <data key="endline">4</data>
   <data key="startoffset">239</data>
   <data key="endoffset">249</data>
   <data key="enterFunction">main</data>
  </edge>
  <node id="A17"/>
  <edge source="A16" target="A17">
   <data key="enterLoopHead">true</data>
   <data key="startline">5</data>
   <data key="endline">5</data>
   <data key="startoffset">256</data>
   <data key="endoffset">264</data>
   <data key="assumption">x == (2);</data>
   <data key="assumption.scope">main</data>
  </edge>
  <node id="A19"/>
  <edge source="A17" target="A19">
   <data key="startline">6</data>
   <data key="endline">6</data>
   <data key="startoffset">278</data>
   <data key="endoffset">282</data>
   <data key="control">condition-true</data>
   <data key="assumption">x == (2);</data>
   <data key="assumption.scope">main</data>
  </edge>
  <node id="sink">
   <data key="sink">true</data>
  </node>
  <edge source="A17" target="sink">
   <data key="startline">6</data>
   <data key="endline">6</data>
   <data key="startoffset">278</data>
   <data key="endoffset">282</data>
   <data key="control">condition-false</data>
  </edge>
  <node id="A21"/>
  <edge source="A19" target="A21">
   <data key="startline">7</data>
   <data key="endline">7</data>
   <data key="startoffset">299</data>
   <data key="endoffset">322</data>
   <data key="assumption">\result == (0);</data>
   <data key="assumption.resultfunction">__VERIFIER_nondet_bool</data>
   <data key="assumption.scope">main</data>
  </edge>
  <edge source="A21" target="sink">
   <data key="startline">7</data>
   <data key="endline">7</data>
   <data key="startoffset">299</data>
   <data key="endoffset">322</data>
   <data key="control">condition-true</data>
  </edge>
  <node id="A31"/>
  <edge source="A21" target="A31">
   <data key="startline">7</data>
   <data key="endline">7</data>
   <data key="startoffset">299</data>
   <data key="endoffset">322</data>
   <data key="control">condition-false</data>
  </edge>
  <edge source="A31" target="sink">
   <data key="startline">8</data>
   <data key="endline">8</data>
   <data key="startoffset">352</data>
   <data key="endoffset">358</data>
   <data key="control">condition-true</data>
  </edge>
  <node id="A33"/>
  <edge source="A31" target="A33">
   <data key="startline">8</data>
   <data key="endline">8</data>
   <data key="startoffset">352</data>
   <data key="endoffset">358</data>
   <data key="control">condition-false</data>
   <data key="assumption">x == (2);</data>
   <data key="assumption.scope">main</data>
  </edge>
  <node id="A35"/>
  <edge source="A33" target="A35">
   <data key="startline">10</data>
   <data key="endline">10</data>
   <data key="startoffset">393</data>
   <data key="endoffset">401</data>
   <data key="assumption">x == (3);</data>
   <data key="assumption.scope">main</data>
  </edge>
  <node id="A42"/>
  <edge source="A35" target="A42">
   <data key="startline">10</data>
   <data key="endline">10</data>
   <data key="startoffset">408</data>
   <data key="endoffset">413</data>
   <data key="control">condition-true</data>
   <data key="assumption">x == (3);</data>
   <data key="assumption.scope">main</data>
  </edge>
  <edge source="A35" target="sink">
   <data key="enterLoopHead">true</data>
   <data key="startline">10</data>
   <data key="endline">10</data>
   <data key="startoffset">408</data>
   <data key="endoffset">413</data>
   <data key="control">condition-false</data>
  </edge>
  <node id="A44"/>
  <edge source="A42" target="A44">
   <data key="enterLoopHead">true</data>
   <data key="startline">10</data>
   <data key="endline">10</data>
   <data key="startoffset">416</data>
   <data key="endoffset">421</data>
   <data key="assumption">x == (-2);</data>
   <data key="assumption.scope">main</data>
  </edge>
  <edge source="A44" target="sink">
   <data key="startline">6</data>
   <data key="endline">6</data>
   <data key="startoffset">278</data>
   <data key="endoffset">282</data>
   <data key="control">condition-true</data>
  </edge>
  <node id="A211"/>
  <edge source="A44" target="A211">
   <data key="startline">6</data>
   <data key="endline">6</data>
   <data key="startoffset">278</data>
   <data key="endoffset">282</data>
   <data key="control">condition-false</data>
   <data key="assumption">x == (-2);</data>
   <data key="assumption.scope">main</data>
  </edge>
  <node id="A212">
   <data key="violation">true</data>
   <data key="violatedProperty">__VERIFIER_error(); called in line 13</data>
  </node>
  <edge source="A211" target="A212">
   <data key="startline">12</data>
   <data key="endline">12</data>
   <data key="startoffset">438</data>
   <data key="endoffset">442</data>
   <data key="control">condition-true</data>
   <data key="assumption">x == (-2);</data>
   <data key="assumption.scope">main</data>
  </edge>
  <edge source="A211" target="sink">
   <data key="startline">12</data>
   <data key="endline">12</data>
   <data key="startoffset">438</data>
   <data key="endoffset">442</data>
   <data key="control">condition-false</data>
  </edge>
 </graph>
</graphml>
