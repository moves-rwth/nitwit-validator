<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
 <key attr.name="isViolationNode" attr.type="boolean" for="node" id="violation">
  <default>false</default>
 </key>
 <key attr.name="isEntryNode" attr.type="boolean" for="node" id="entry">
  <default>false</default>
 </key>
 <key attr.name="isSinkNode" attr.type="boolean" for="node" id="sink">
  <default>false</default>
 </key>
 <key attr.name="violatedProperty" attr.type="string" for="node" id="violatedProperty"/>
 <key attr.name="sourcecodeLanguage" attr.type="string" for="graph" id="sourcecodelang"/>
 <key attr.name="programFile" attr.type="string" for="graph" id="programfile"/>
 <key attr.name="programHash" attr.type="string" for="graph" id="programhash"/>
 <key attr.name="specification" attr.type="string" for="graph" id="specification"/>
 <key attr.name="architecture" attr.type="string" for="graph" id="architecture"/>
 <key attr.name="producer" attr.type="string" for="graph" id="producer"/>
 <key attr.name="creationTime" attr.type="string" for="graph" id="creationtime"/>
 <key attr.name="startline" attr.type="int" for="edge" id="startline"/>
 <key attr.name="endline" attr.type="int" for="edge" id="endline"/>
 <key attr.name="startoffset" attr.type="int" for="edge" id="startoffset"/>
 <key attr.name="endoffset" attr.type="int" for="edge" id="endoffset"/>
 <key attr.name="originFileName" attr.type="string" for="edge" id="originfile">
  <default>./SV-COMP_signextension_.c</default>
 </key>
 <key attr.name="control" attr.type="string" for="edge" id="control"/>
 <key attr.name="assumption" attr.type="string" for="edge" id="assumption"/>
 <key attr.name="assumption.scope" attr.type="string" for="edge" id="assumption.scope"/>
 <key attr.name="enterFunction" attr.type="string" for="edge" id="enterFunction"/>
 <key attr.name="witness-type" attr.type="string" for="graph" id="witness-type"/>
 <key attr.name="inputWitnessHash" attr.type="string" for="graph" id="inputwitnesshash"/>
 <graph edgedefault="directed">
  <data key="witness-type">violation_witness</data>
  <data key="sourcecodelang">C</data>
  <data key="producer">CPAchecker 1.8-svn a776d662f5+ / kInduction</data>
  <data key="specification">CHECK( init(main()), LTL(G ! call(__VERIFIER_error())) )</data>
  <data key="programfile">./SV-COMP_signextension_.c</data>
  <data key="programhash">8d39710a9759cda6c47269dfa9f5bb850b936147cc5de34a7016f5d4f8b049c5</data>
  <data key="architecture">32bit</data>
  <data key="creationtime">2019-06-09T11:13:13+02:00</data>
  <node id="A29">
   <data key="entry">true</data>
  </node>
  <node id="A44"/>
  <edge source="A29" target="A44">
   <data key="startline">3</data>
   <data key="endline">3</data>
   <data key="startoffset">249</data>
   <data key="endoffset">259</data>
   <data key="enterFunction">main</data>
  </edge>
  <node id="A55"/>
  <edge source="A44" target="A55">
   <data key="startline">5</data>
   <data key="endline">5</data>
   <data key="startoffset">265</data>
   <data key="endoffset">295</data>
   <data key="assumption">allbits == (65535U);</data>
   <data key="assumption.scope">main</data>
  </edge>
  <node id="A57"/>
  <edge source="A55" target="A57">
   <data key="startline">6</data>
   <data key="endline">6</data>
   <data key="startoffset">300</data>
   <data key="endoffset">332</data>
   <data key="assumption">signedallbits == (-1);</data>
   <data key="assumption.scope">main</data>
  </edge>
  <node id="A59"/>
  <edge source="A57" target="A59">
   <data key="startline">7</data>
   <data key="endline">7</data>
   <data key="startoffset">337</data>
   <data key="endoffset">366</data>
   <data key="assumption">unsignedtosigned == (65535);</data>
   <data key="assumption.scope">main</data>
  </edge>
  <node id="A61"/>
  <edge source="A59" target="A61">
   <data key="startline">8</data>
   <data key="endline">8</data>
   <data key="startoffset">371</data>
   <data key="endoffset">411</data>
   <data key="assumption">unsignedtounsigned == (65535U);</data>
   <data key="assumption.scope">main</data>
  </edge>
  <node id="A62"/>
  <edge source="A61" target="A62">
   <data key="startline">9</data>
   <data key="endline">9</data>
   <data key="startoffset">416</data>
   <data key="endoffset">449</data>
   <data key="assumption">signedtosigned == (-1);</data>
   <data key="assumption.scope">main</data>
  </edge>
  <node id="A65"/>
  <edge source="A62" target="A65">
   <data key="startline">10</data>
   <data key="endline">10</data>
   <data key="startoffset">454</data>
   <data key="endoffset">498</data>
   <data key="assumption">signedtounsigned == (4294967295U);</data>
   <data key="assumption.scope">main</data>
  </edge>
  <node id="A99">
   <data key="violation">true</data>
   <data key="violatedProperty">__VERIFIER_error(); called in line 25</data>
  </node>
  <edge source="A65" target="A99">
   <data key="startline">19</data>
   <data key="endline">20</data>
   <data key="startoffset">535</data>
   <data key="endoffset">658</data>
   <data key="control">condition-true</data>
   <data key="assumption">signedtounsigned == (4294967295U);</data>
   <data key="assumption.scope">main</data>
  </edge>
  <node id="sink">
   <data key="sink">true</data>
  </node>
  <edge source="A65" target="sink">
   <data key="startline">19</data>
   <data key="endline">20</data>
   <data key="startoffset">535</data>
   <data key="endoffset">658</data>
   <data key="control">condition-false</data>
  </edge>
 </graph>
</graphml>
