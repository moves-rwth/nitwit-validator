<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
 <key attr.name="isViolationNode" attr.type="boolean" for="node" id="violation">
  <default>false</default>
 </key>
 <key attr.name="isEntryNode" attr.type="boolean" for="node" id="entry">
  <default>false</default>
 </key>
 <key attr.name="isSinkNode" attr.type="boolean" for="node" id="sink">
  <default>false</default>
 </key>
 <key attr.name="violatedProperty" attr.type="string" for="node" id="violatedProperty"/>
 <key attr.name="sourcecodeLanguage" attr.type="string" for="graph" id="sourcecodelang"/>
 <key attr.name="programFile" attr.type="string" for="graph" id="programfile"/>
 <key attr.name="programHash" attr.type="string" for="graph" id="programhash"/>
 <key attr.name="specification" attr.type="string" for="graph" id="specification"/>
 <key attr.name="architecture" attr.type="string" for="graph" id="architecture"/>
 <key attr.name="producer" attr.type="string" for="graph" id="producer"/>
 <key attr.name="creationTime" attr.type="string" for="graph" id="creationtime"/>
 <key attr.name="startline" attr.type="int" for="edge" id="startline"/>
 <key attr.name="endline" attr.type="int" for="edge" id="endline"/>
 <key attr.name="startoffset" attr.type="int" for="edge" id="startoffset"/>
 <key attr.name="endoffset" attr.type="int" for="edge" id="endoffset"/>
 <key attr.name="originFileName" attr.type="string" for="edge" id="originfile">
  <default>./21.bitfield.c</default>
 </key>
 <key attr.name="control" attr.type="string" for="edge" id="control"/>
 <key attr.name="assumption" attr.type="string" for="edge" id="assumption"/>
 <key attr.name="assumption.scope" attr.type="string" for="edge" id="assumption.scope"/>
 <key attr.name="enterFunction" attr.type="string" for="edge" id="enterFunction"/>
 <key attr.name="witness-type" attr.type="string" for="graph" id="witness-type"/>
 <key attr.name="inputWitnessHash" attr.type="string" for="graph" id="inputwitnesshash"/>
 <graph edgedefault="directed">
  <data key="witness-type">violation_witness</data>
  <data key="sourcecodelang">C</data>
  <data key="producer">CPAchecker 1.8-svn a776d662f5+ / kInduction</data>
  <data key="specification">CHECK( init(main()), LTL(G ! call(__VERIFIER_error())) )</data>
  <data key="programfile">./21.bitfield.c</data>
  <data key="programhash">282b4a31e518c88ea1bc62fffbb1e117de600193f79126f4780acbb5b36043a9</data>
  <data key="architecture">32bit</data>
  <data key="creationtime">2019-09-02T14:59:03+02:00</data>
  <node id="A47">
   <data key="entry">true</data>
  </node>
  <node id="A91"/>
  <edge source="A47" target="A91">
   <data key="startline">13</data>
   <data key="endline">13</data>
   <data key="startoffset">462</data>
   <data key="endoffset">472</data>
   <data key="enterFunction">main</data>
  </edge>
  <node id="A117"/>
  <edge source="A91" target="A117">
   <data key="startline">17</data>
   <data key="endline">17</data>
   <data key="startoffset">515</data>
   <data key="endoffset">521</data>
   <data key="assumption">((signed int)(s.a)) == (1);</data>
   <data key="assumption.scope">main</data>
  </edge>
  <node id="A121"/>
  <edge source="A117" target="A121">
   <data key="startline">18</data>
   <data key="endline">18</data>
   <data key="startoffset">528</data>
   <data key="endoffset">534</data>
   <data key="assumption">((signed int)(s.b)) == (1);</data>
   <data key="assumption.scope">main</data>
  </edge>
  <node id="A126"/>
  <edge source="A121" target="A126">
   <data key="startline">19</data>
   <data key="endline">19</data>
   <data key="startoffset">541</data>
   <data key="endoffset">547</data>
   <data key="assumption">((signed int)(s.c)) == (1);</data>
   <data key="assumption.scope">main</data>
  </edge>
  <node id="A129"/>
  <edge source="A126" target="A129">
   <data key="startline">20</data>
   <data key="endline">20</data>
   <data key="startoffset">554</data>
   <data key="endoffset">560</data>
   <data key="assumption">((signed int)(s.d)) == (9);</data>
   <data key="assumption.scope">main</data>
  </edge>
  <node id="A133"/>
  <edge source="A129" target="A133">
   <data key="startline">21</data>
   <data key="endline">21</data>
   <data key="startoffset">567</data>
   <data key="endoffset">573</data>
   <data key="assumption">((signed int)(s.e)) == (9);</data>
   <data key="assumption.scope">main</data>
  </edge>
  <node id="A144"/>
  <edge source="A133" target="A144">
   <data key="startline">23</data>
   <data key="endline">23</data>
   <data key="startoffset">641</data>
   <data key="endoffset">648</data>
   <data key="assumption">((signed int)(s.a)) == (0);</data>
   <data key="assumption.scope">main</data>
  </edge>
  <node id="A148"/>
  <edge source="A144" target="A148">
   <data key="startline">24</data>
   <data key="endline">24</data>
   <data key="startoffset">655</data>
   <data key="endoffset">662</data>
   <data key="assumption">((signed int)(s.b)) == (2);</data>
   <data key="assumption.scope">main</data>
  </edge>
  <node id="A151"/>
  <edge source="A148" target="A151">
   <data key="startline">25</data>
   <data key="endline">25</data>
   <data key="startoffset">669</data>
   <data key="endoffset">676</data>
   <data key="assumption">((signed int)(s.c)) == (2);</data>
   <data key="assumption.scope">main</data>
  </edge>
  <node id="A153"/>
  <edge source="A151" target="A153">
   <data key="startline">26</data>
   <data key="endline">26</data>
   <data key="startoffset">683</data>
   <data key="endoffset">690</data>
   <data key="assumption">((signed int)(s.d)) == (10);</data>
   <data key="assumption.scope">main</data>
  </edge>
  <node id="A157"/>
  <edge source="A153" target="A157">
   <data key="startline">27</data>
   <data key="endline">27</data>
   <data key="startoffset">697</data>
   <data key="endoffset">704</data>
   <data key="assumption">((signed int)(s.e)) == (10);</data>
   <data key="assumption.scope">main</data>
  </edge>
  <node id="A164"/>
  <edge source="A157" target="A164">
   <data key="startline">29</data>
   <data key="endline">29</data>
   <data key="startoffset">772</data>
   <data key="endoffset">780</data>
   <data key="assumption">((signed int)(s.a)) == (0);</data>
   <data key="assumption.scope">main</data>
  </edge>
  <node id="A165"/>
  <edge source="A164" target="A165">
   <data key="startline">30</data>
   <data key="endline">30</data>
   <data key="startoffset">787</data>
   <data key="endoffset">795</data>
   <data key="assumption">((signed int)(s.b)) == (0);</data>
   <data key="assumption.scope">main</data>
  </edge>
  <node id="A166"/>
  <edge source="A165" target="A166">
   <data key="startline">31</data>
   <data key="endline">31</data>
   <data key="startoffset">802</data>
   <data key="endoffset">810</data>
   <data key="assumption">((signed int)(s.c)) == (0);</data>
   <data key="assumption.scope">main</data>
  </edge>
  <node id="A167"/>
  <edge source="A166" target="A167">
   <data key="startline">32</data>
   <data key="endline">32</data>
   <data key="startoffset">817</data>
   <data key="endoffset">825</data>
   <data key="assumption">((signed int)(s.d)) == (8);</data>
   <data key="assumption.scope">main</data>
  </edge>
  <node id="A168"/>
  <edge source="A167" target="A168">
   <data key="startline">33</data>
   <data key="endline">33</data>
   <data key="startoffset">832</data>
   <data key="endoffset">840</data>
   <data key="assumption">((signed int)(s.e)) == (8);</data>
   <data key="assumption.scope">main</data>
  </edge>
  <node id="A201"/>
  <edge source="A168" target="A201">
   <data key="startline">35</data>
   <data key="endline">35</data>
   <data key="startoffset">908</data>
   <data key="endoffset">913</data>
   <data key="assumption">((signed long long int)(s2.a)) == (0LL);</data>
   <data key="assumption.scope">main</data>
  </edge>
  <node id="A241">
   <data key="violation">true</data>
   <data key="violatedProperty">__VERIFIER_error(); called in line 38</data>
  </node>
  <edge source="A201" target="A241">
   <data key="startline">37</data>
   <data key="endline">37</data>
   <data key="startoffset">1043</data>
   <data key="endoffset">1052</data>
   <data key="control">condition-true</data>
   <data key="assumption">((signed int)(s2.e)) == (8);</data>
   <data key="assumption.scope">main</data>
  </edge>
  <node id="sink">
   <data key="sink">true</data>
  </node>
  <edge source="A201" target="sink">
   <data key="startline">37</data>
   <data key="endline">37</data>
   <data key="startoffset">990</data>
   <data key="endoffset">1052</data>
   <data key="control">condition-false</data>
  </edge>
 </graph>
</graphml>
