<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <key attr.name="originFileName" attr.type="string" for="edge" id="originfile">
    <default>&lt;command-line&gt;</default>
  </key>
  <key attr.name="invariant" attr.type="string" for="node" id="invariant"/>
  <key attr.name="invariant.scope" attr.type="string" for="node" id="invariant.scope"/>
  <key attr.name="nodeType" attr.type="string" for="node" id="nodetype">
    <default>path</default>
  </key>
  <key attr.name="isFrontierNode" attr.type="boolean" for="node" id="frontier">
    <default>false</default>
  </key>
  <key attr.name="isViolationNode" attr.type="boolean" for="node" id="violation">
    <default>false</default>
  </key>
  <key attr.name="isEntryNode" attr.type="boolean" for="node" id="entry">
    <default>false</default>
  </key>
  <key attr.name="isSinkNode" attr.type="boolean" for="node" id="sink">
    <default>false</default>
  </key>
  <key attr.name="enterLoopHead" attr.type="boolean" for="edge" id="enterLoopHead">
    <default>false</default>
  </key>
  <key attr.name="threadNumber" attr.type="int" for="node" id="thread">
    <default>0</default>
  </key>
  <key attr.name="sourcecodeLanguage" attr.type="string" for="graph" id="sourcecodelang"/>
  <key attr.name="programFile" attr.type="string" for="graph" id="programfile"/>
  <key attr.name="programHash" attr.type="string" for="graph" id="programhash"/>
  <key attr.name="specification" attr.type="string" for="graph" id="specification"/>
  <key attr.name="architecture" attr.type="string" for="graph" id="architecture"/>
  <key attr.name="producer" attr.type="string" for="graph" id="producer"/>
  <key attr.name="sourcecode" attr.type="string" for="edge" id="sourcecode"/>
  <key attr.name="startline" attr.type="int" for="edge" id="startline"/>
  <key attr.name="control" attr.type="string" for="edge" id="control"/>
  <key attr.name="assumption" attr.type="string" for="edge" id="assumption"/>
  <key attr.name="assumption.resultfunction" attr.type="string" for="edge" id="assumption.resultfunction"/>
  <key attr.name="assumption.scope" attr.type="string" for="edge" id="assumption.scope"/>
  <key attr.name="enterFunction" attr.type="string" for="edge" id="enterFunction"/>
  <key attr.name="returnFromFunction" attr.type="string" for="edge" id="returnFrom"/>
  <key attr.name="witness-type" attr.type="string" for="graph" id="witness-type"/>
  <graph edgedefault="directed">
    <data key="sourcecodelang">C</data>
    <node id="sink"/>
    <node id="2.20">
      <data key="entry">true</data>
    </node>
    <edge source="2.20" target="3.23">
      <data key="originfile">SV-COMP_cast_float_ptr_.c</data>
      <data key="startline">35</data>
      <data key="assumption">a = NAN;</data>
      <data key="assumption.scope">main</data>
    </edge>
    <node id="3.23"/>
    <edge source="3.23" target="29.26">
      <data key="originfile">SV-COMP_cast_float_ptr_.c</data>
      <data key="startline">8</data>
      <data key="assumption">d == NAN;</data>
      <data key="assumption.scope">cast</data>
    </edge>
    <node id="29.26"/>
    <edge source="29.26" target="34.27">
      <data key="originfile">SV-COMP_cast_float_ptr_.c</data>
      <data key="startline">11</data>
      <data key="sourcecode">[!((byte_extract_little_endian(d!0@1#1, 0, __CPROVER_size_t) &amp; 2146435072u) &gt;&gt; 20 == 2047u)]</data>
    </edge>
    <node id="34.27"/>
    <edge source="34.27" target="36.29">
      <data key="originfile">SV-COMP_cast_float_ptr_.c</data>
      <data key="startline">13</data>
      <data key="assumption">dmax = 5.962933e-315;</data>
      <data key="assumption.scope">cast</data>
    </edge>
    <node id="36.29"/>
    <edge source="36.29" target="39.30">
      <data key="originfile">SV-COMP_cast_float_ptr_.c</data>
      <data key="startline">16</data>
      <data key="sourcecode">[!(d!0@1#1 &gt; dmax!0@1#5)]</data>
    </edge>
    <node id="39.30"/>
    <edge source="39.30" target="42.33">
      <data key="originfile">SV-COMP_cast_float_ptr_.c</data>
      <data key="startline">19</data>
      <data key="sourcecode">[!(-d!0@1#1 &gt; dmax!0@1#5)]</data>
    </edge>
    <node id="42.33"/>
    <edge source="42.33" target="23.34">
      <data key="originfile">SV-COMP_cast_float_ptr_.c</data>
      <data key="startline">3</data>
      <data key="assumption">cond = 0;</data>
    </edge>
    <node id="23.34"/>
    <edge source="23.34" target="24.35">
      <data key="originfile">SV-COMP_cast_float_ptr_.c</data>
      <data key="startline">3</data>
      <data key="sourcecode">[!(!(cond!0@1#1 == 0))]</data>
    </edge>
    <node id="24.35">
      <data key="violation">true</data>
    </node>
    <edge source="24.35" target="sink">
      <data key="originfile">SV-COMP_cast_float_ptr_.c</data>
      <data key="startline">3</data>
    </edge>
  </graph>
</graphml>
