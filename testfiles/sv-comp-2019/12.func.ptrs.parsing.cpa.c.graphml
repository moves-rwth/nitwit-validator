<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
 <key attr.name="isViolationNode" attr.type="boolean" for="node" id="violation">
  <default>false</default>
 </key>
 <key attr.name="isEntryNode" attr.type="boolean" for="node" id="entry">
  <default>false</default>
 </key>
 <key attr.name="isSinkNode" attr.type="boolean" for="node" id="sink">
  <default>false</default>
 </key>
 <key attr.name="violatedProperty" attr.type="string" for="node" id="violatedProperty"/>
 <key attr.name="sourcecodeLanguage" attr.type="string" for="graph" id="sourcecodelang"/>
 <key attr.name="programFile" attr.type="string" for="graph" id="programfile"/>
 <key attr.name="programHash" attr.type="string" for="graph" id="programhash"/>
 <key attr.name="specification" attr.type="string" for="graph" id="specification"/>
 <key attr.name="architecture" attr.type="string" for="graph" id="architecture"/>
 <key attr.name="producer" attr.type="string" for="graph" id="producer"/>
 <key attr.name="creationTime" attr.type="string" for="graph" id="creationtime"/>
 <key attr.name="startline" attr.type="int" for="edge" id="startline"/>
 <key attr.name="endline" attr.type="int" for="edge" id="endline"/>
 <key attr.name="startoffset" attr.type="int" for="edge" id="startoffset"/>
 <key attr.name="endoffset" attr.type="int" for="edge" id="endoffset"/>
 <key attr.name="originFileName" attr.type="string" for="edge" id="originfile">
  <default>./12.func.ptrs.parsing.c</default>
 </key>
 <key attr.name="assumption" attr.type="string" for="edge" id="assumption"/>
 <key attr.name="assumption.scope" attr.type="string" for="edge" id="assumption.scope"/>
 <key attr.name="enterFunction" attr.type="string" for="edge" id="enterFunction"/>
 <key attr.name="returnFromFunction" attr.type="string" for="edge" id="returnFrom"/>
 <key attr.name="witness-type" attr.type="string" for="graph" id="witness-type"/>
 <key attr.name="inputWitnessHash" attr.type="string" for="graph" id="inputwitnesshash"/>
 <graph edgedefault="directed">
  <data key="witness-type">violation_witness</data>
  <data key="sourcecodelang">C</data>
  <data key="producer">CPAchecker 1.8-svn a776d662f5+ / kInduction</data>
  <data key="specification">CHECK( init(main()), LTL(G ! call(__VERIFIER_error())) )</data>
  <data key="programfile">./12.func.ptrs.parsing.c</data>
  <data key="programhash">c7f233774f1f271d1c772cba50475075c56910e0aea5a363726b009577eeb453</data>
  <data key="architecture">32bit</data>
  <data key="creationtime">2019-06-27T18:25:28+02:00</data>
  <node id="A152">
   <data key="entry">true</data>
  </node>
  <node id="A492"/>
  <edge source="A152" target="A492">
   <data key="startline">29</data>
   <data key="endline">29</data>
   <data key="startoffset">18304</data>
   <data key="endoffset">18314</data>
   <data key="enterFunction">main</data>
  </edge>
  <node id="sink">
   <data key="sink">true</data>
  </node>
  <edge source="A492" target="sink">
   <data key="startline">34</data>
   <data key="endline">34</data>
   <data key="startoffset">18371</data>
   <data key="endoffset">18377</data>
   <data key="enterFunction">func1</data>
  </edge>
  <node id="A552"/>
  <edge source="A492" target="A552">
   <data key="startline">34</data>
   <data key="endline">34</data>
   <data key="startoffset">18371</data>
   <data key="endoffset">18375</data>
   <data key="enterFunction">func2</data>
  </edge>
  <node id="A554"/>
  <edge source="A552" target="A554">
   <data key="startline">15</data>
   <data key="endline">15</data>
   <data key="startoffset">18124</data>
   <data key="endoffset">18143</data>
   <data key="assumption">y == (50);</data>
   <data key="assumption.scope">func2</data>
  </edge>
  <node id="A555"/>
  <edge source="A554" target="A555">
   <data key="startline">16</data>
   <data key="endline">16</data>
   <data key="startoffset">18150</data>
   <data key="endoffset">18157</data>
   <data key="returnFrom">func2</data>
  </edge>
  <node id="A560"/>
  <edge source="A555" target="A560">
   <data key="startline">36</data>
   <data key="endline">36</data>
   <data key="startoffset">18415</data>
   <data key="endoffset">18419</data>
   <data key="enterFunction">func1</data>
  </edge>
  <node id="A562"/>
  <edge source="A560" target="A562">
   <data key="startline">10</data>
   <data key="endline">10</data>
   <data key="startoffset">18061</data>
   <data key="endoffset">18080</data>
   <data key="assumption">x == (49);</data>
   <data key="assumption.scope">func1</data>
  </edge>
  <node id="A563"/>
  <edge source="A562" target="A563">
   <data key="startline">11</data>
   <data key="endline">11</data>
   <data key="startoffset">18087</data>
   <data key="endoffset">18094</data>
   <data key="returnFrom">func1</data>
  </edge>
  <edge source="A563" target="sink">
   <data key="startline">38</data>
   <data key="endline">38</data>
   <data key="startoffset">18443</data>
   <data key="endoffset">18449</data>
   <data key="enterFunction">func1</data>
  </edge>
  <node id="A593"/>
  <edge source="A563" target="A593">
   <data key="startline">38</data>
   <data key="endline">38</data>
   <data key="startoffset">18443</data>
   <data key="endoffset">18447</data>
   <data key="enterFunction">func2</data>
  </edge>
  <node id="A607"/>
  <edge source="A593" target="A607">
   <data key="startline">15</data>
   <data key="endline">15</data>
   <data key="startoffset">18124</data>
   <data key="endoffset">18143</data>
   <data key="assumption">y == (50);</data>
   <data key="assumption.scope">func2</data>
  </edge>
  <node id="A619"/>
  <edge source="A607" target="A619">
   <data key="startline">16</data>
   <data key="endline">16</data>
   <data key="startoffset">18150</data>
   <data key="endoffset">18157</data>
   <data key="returnFrom">func2</data>
  </edge>
  <edge source="A619" target="sink">
   <data key="startline">39</data>
   <data key="endline">39</data>
   <data key="startoffset">18455</data>
   <data key="endoffset">18464</data>
   <data key="enterFunction">func1</data>
  </edge>
  <node id="A669"/>
  <edge source="A619" target="A669">
   <data key="startline">39</data>
   <data key="endline">39</data>
   <data key="startoffset">18455</data>
   <data key="endoffset">18462</data>
   <data key="enterFunction">func2</data>
  </edge>
  <node id="A685"/>
  <edge source="A669" target="A685">
   <data key="startline">15</data>
   <data key="endline">15</data>
   <data key="startoffset">18124</data>
   <data key="endoffset">18143</data>
   <data key="assumption">y == (50);</data>
   <data key="assumption.scope">func2</data>
  </edge>
  <node id="A693"/>
  <edge source="A685" target="A693">
   <data key="startline">16</data>
   <data key="endline">16</data>
   <data key="startoffset">18150</data>
   <data key="endoffset">18157</data>
   <data key="returnFrom">func2</data>
  </edge>
  <node id="A775"/>
  <edge source="A693" target="A775">
   <data key="startline">42</data>
   <data key="endline">42</data>
   <data key="startoffset">18497</data>
   <data key="endoffset">18501</data>
   <data key="enterFunction">func1</data>
  </edge>
  <node id="A788"/>
  <edge source="A775" target="A788">
   <data key="startline">10</data>
   <data key="endline">10</data>
   <data key="startoffset">18061</data>
   <data key="endoffset">18080</data>
   <data key="assumption">x == (49);</data>
   <data key="assumption.scope">func1</data>
  </edge>
  <node id="A791"/>
  <edge source="A788" target="A791">
   <data key="startline">11</data>
   <data key="endline">11</data>
   <data key="startoffset">18087</data>
   <data key="endoffset">18094</data>
   <data key="returnFrom">func1</data>
  </edge>
  <node id="A847"/>
  <edge source="A791" target="A847">
   <data key="startline">46</data>
   <data key="endline">46</data>
   <data key="startoffset">18563</data>
   <data key="endoffset">18572</data>
   <data key="enterFunction">func1</data>
  </edge>
  <node id="A851"/>
  <edge source="A847" target="A851">
   <data key="startline">10</data>
   <data key="endline">10</data>
   <data key="startoffset">18061</data>
   <data key="endoffset">18080</data>
   <data key="assumption">x == (49);</data>
   <data key="assumption.scope">func1</data>
  </edge>
  <node id="A853"/>
  <edge source="A851" target="A853">
   <data key="startline">11</data>
   <data key="endline">11</data>
   <data key="startoffset">18087</data>
   <data key="endoffset">18094</data>
   <data key="returnFrom">func1</data>
  </edge>
  <edge source="A853" target="sink">
   <data key="startline">47</data>
   <data key="endline">47</data>
   <data key="startoffset">18580</data>
   <data key="endoffset">18591</data>
   <data key="enterFunction">func1</data>
  </edge>
  <node id="A871"/>
  <edge source="A853" target="A871">
   <data key="startline">47</data>
   <data key="endline">47</data>
   <data key="startoffset">18580</data>
   <data key="endoffset">18589</data>
   <data key="enterFunction">func2</data>
  </edge>
  <node id="A873"/>
  <edge source="A871" target="A873">
   <data key="startline">15</data>
   <data key="endline">15</data>
   <data key="startoffset">18124</data>
   <data key="endoffset">18143</data>
   <data key="assumption">y == (50);</data>
   <data key="assumption.scope">func2</data>
  </edge>
  <node id="A874"/>
  <edge source="A873" target="A874">
   <data key="startline">16</data>
   <data key="endline">16</data>
   <data key="startoffset">18150</data>
   <data key="endoffset">18157</data>
   <data key="returnFrom">func2</data>
  </edge>
  <edge source="A874" target="sink">
   <data key="startline">48</data>
   <data key="endline">48</data>
   <data key="startoffset">18597</data>
   <data key="endoffset">18608</data>
   <data key="enterFunction">func1</data>
  </edge>
  <node id="A925"/>
  <edge source="A874" target="A925">
   <data key="startline">48</data>
   <data key="endline">48</data>
   <data key="startoffset">18597</data>
   <data key="endoffset">18606</data>
   <data key="enterFunction">func2</data>
  </edge>
  <node id="A929"/>
  <edge source="A925" target="A929">
   <data key="startline">15</data>
   <data key="endline">15</data>
   <data key="startoffset">18124</data>
   <data key="endoffset">18143</data>
   <data key="assumption">y == (50);</data>
   <data key="assumption.scope">func2</data>
  </edge>
  <node id="A933"/>
  <edge source="A929" target="A933">
   <data key="startline">16</data>
   <data key="endline">16</data>
   <data key="startoffset">18150</data>
   <data key="endoffset">18157</data>
   <data key="returnFrom">func2</data>
  </edge>
  <node id="A949"/>
  <edge source="A933" target="A949">
   <data key="startline">50</data>
   <data key="endline">50</data>
   <data key="startoffset">18615</data>
   <data key="endoffset">18620</data>
   <data key="enterFunction">blah</data>
  </edge>
  <node id="A954"/>
  <edge source="A949" target="A954">
   <data key="startline">5</data>
   <data key="endline">5</data>
   <data key="startoffset">18011</data>
   <data key="endoffset">18019</data>
   <data key="enterFunction">f</data>
  </edge>
  <node id="A957"/>
  <edge source="A954" target="A957">
   <data key="startline">21</data>
   <data key="endline">21</data>
   <data key="startoffset">18211</data>
   <data key="endoffset">18217</data>
   <data key="returnFrom">f</data>
  </edge>
  <node id="A963"/>
  <edge source="A957" target="A963">
   <data key="startline">6</data>
   <data key="endline">6</data>
   <data key="startoffset">18027</data>
   <data key="endoffset">18033</data>
   <data key="returnFrom">blah</data>
  </edge>
  <node id="A969">
   <data key="violation">true</data>
   <data key="violatedProperty">__VERIFIER_error(); called in line 25</data>
  </node>
  <edge source="A963" target="A969">
   <data key="startline">53</data>
   <data key="endline">53</data>
   <data key="startoffset">18673</data>
   <data key="endoffset">18686</data>
   <data key="enterFunction">error</data>
  </edge>
 </graph>
</graphml>
