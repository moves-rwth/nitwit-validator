<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
 <key attr.name="isViolationNode" attr.type="boolean" for="node" id="violation">
  <default>false</default>
 </key>
 <key attr.name="isEntryNode" attr.type="boolean" for="node" id="entry">
  <default>false</default>
 </key>
 <key attr.name="isSinkNode" attr.type="boolean" for="node" id="sink">
  <default>false</default>
 </key>
 <key attr.name="enterLoopHead" attr.type="boolean" for="edge" id="enterLoopHead">
  <default>false</default>
 </key>
 <key attr.name="violatedProperty" attr.type="string" for="node" id="violatedProperty"/>
 <key attr.name="sourcecodeLanguage" attr.type="string" for="graph" id="sourcecodelang"/>
 <key attr.name="programFile" attr.type="string" for="graph" id="programfile"/>
 <key attr.name="programHash" attr.type="string" for="graph" id="programhash"/>
 <key attr.name="specification" attr.type="string" for="graph" id="specification"/>
 <key attr.name="architecture" attr.type="string" for="graph" id="architecture"/>
 <key attr.name="producer" attr.type="string" for="graph" id="producer"/>
 <key attr.name="creationTime" attr.type="string" for="graph" id="creationtime"/>
 <key attr.name="startline" attr.type="int" for="edge" id="startline"/>
 <key attr.name="endline" attr.type="int" for="edge" id="endline"/>
 <key attr.name="startoffset" attr.type="int" for="edge" id="startoffset"/>
 <key attr.name="endoffset" attr.type="int" for="edge" id="endoffset"/>
 <key attr.name="originFileName" attr.type="string" for="edge" id="originfile">
  <default>./25.defense.example.c</default>
 </key>
 <key attr.name="control" attr.type="string" for="edge" id="control"/>
 <key attr.name="assumption" attr.type="string" for="edge" id="assumption"/>
 <key attr.name="assumption.scope" attr.type="string" for="edge" id="assumption.scope"/>
 <key attr.name="enterFunction" attr.type="string" for="edge" id="enterFunction"/>
 <key attr.name="witness-type" attr.type="string" for="graph" id="witness-type"/>
 <key attr.name="inputWitnessHash" attr.type="string" for="graph" id="inputwitnesshash"/>
 <graph edgedefault="directed">
  <data key="witness-type">violation_witness</data>
  <data key="sourcecodelang">C</data>
  <data key="producer">CPAchecker 1.8-svn a776d662f5+ / kInduction</data>
  <data key="specification">CHECK( init(main()), LTL(G ! call(__VERIFIER_error())) )</data>
  <data key="programfile">./25.defense.example.c</data>
  <data key="programhash">171d363c841ea75289be35680cee132112d22a78a9bc2751bcddd1c8f32110e6</data>
  <data key="architecture">32bit</data>
  <data key="creationtime">2019-11-30T16:06:42+01:00</data>
  <node id="A65">
   <data key="entry">true</data>
  </node>
  <node id="A95"/>
  <edge source="A65" target="A95">
   <data key="startline">9</data>
   <data key="endline">9</data>
   <data key="startoffset">390</data>
   <data key="endoffset">400</data>
   <data key="enterFunction">main</data>
  </edge>
  <node id="A134"/>
  <edge source="A95" target="A134">
   <data key="startline">10</data>
   <data key="endline">10</data>
   <data key="startoffset">413</data>
   <data key="endoffset">437</data>
   <data key="assumption">x == (2147483647);</data>
   <data key="assumption.scope">main</data>
  </edge>
  <node id="A140"/>
  <edge source="A134" target="A140">
   <data key="enterLoopHead">true</data>
   <data key="startline">11</data>
   <data key="endline">11</data>
   <data key="startoffset">444</data>
   <data key="endoffset">469</data>
   <data key="assumption">x == (2147483647);</data>
   <data key="assumption.scope">main</data>
  </edge>
  <node id="A145"/>
  <edge source="A140" target="A145">
   <data key="startline">12</data>
   <data key="endline">12</data>
   <data key="startoffset">482</data>
   <data key="endoffset">486</data>
   <data key="control">condition-true</data>
   <data key="assumption">x == (2147483647);</data>
   <data key="assumption.scope">main</data>
  </edge>
  <node id="A186"/>
  <edge source="A145" target="A186">
   <data key="startline">13</data>
   <data key="endline">13</data>
   <data key="startoffset">507</data>
   <data key="endoffset">532</data>
   <data key="assumption">b == (0);</data>
   <data key="assumption.scope">main</data>
  </edge>
  <node id="A192"/>
  <edge source="A186" target="A192">
   <data key="startline">14</data>
   <data key="endline">14</data>
   <data key="startoffset">547</data>
   <data key="endoffset">547</data>
   <data key="control">condition-false</data>
   <data key="assumption">b == (0);</data>
   <data key="assumption.scope">main</data>
  </edge>
  <node id="A202"/>
  <edge source="A192" target="A202">
   <data key="enterLoopHead">true</data>
   <data key="startline">17</data>
   <data key="endline">17</data>
   <data key="startoffset">598</data>
   <data key="endoffset">606</data>
   <data key="assumption">x == (-2147483648);</data>
   <data key="assumption.scope">main</data>
  </edge>
  <node id="A255"/>
  <edge source="A202" target="A255">
   <data key="startline">12</data>
   <data key="endline">12</data>
   <data key="startoffset">482</data>
   <data key="endoffset">486</data>
   <data key="control">condition-false</data>
   <data key="assumption">x == (-2147483648);</data>
   <data key="assumption.scope">main</data>
  </edge>
  <node id="A256"/>
  <edge source="A255" target="A256">
   <data key="startline">19</data>
   <data key="endline">19</data>
   <data key="startoffset">619</data>
   <data key="endoffset">642</data>
   <data key="enterFunction">__VERIFIER_assert</data>
  </edge>
  <node id="A258">
   <data key="violation">true</data>
   <data key="violatedProperty">__VERIFIER_error(); called in line 6</data>
  </node>
  <edge source="A256" target="A258">
   <data key="startline">6</data>
   <data key="endline">6</data>
   <data key="startoffset">361</data>
   <data key="endoffset">364</data>
   <data key="control">condition-true</data>
   <data key="assumption">cond == (0);</data>
   <data key="assumption.scope">__VERIFIER_assert</data>
  </edge>
 </graph>
</graphml>
