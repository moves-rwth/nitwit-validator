<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
 <key attr.name="isViolationNode" attr.type="boolean" for="node" id="violation">
  <default>false</default>
 </key>
 <key attr.name="isEntryNode" attr.type="boolean" for="node" id="entry">
  <default>false</default>
 </key>
 <key attr.name="isSinkNode" attr.type="boolean" for="node" id="sink">
  <default>false</default>
 </key>
 <key attr.name="violatedProperty" attr.type="string" for="node" id="violatedProperty"/>
 <key attr.name="sourcecodeLanguage" attr.type="string" for="graph" id="sourcecodelang"/>
 <key attr.name="programFile" attr.type="string" for="graph" id="programfile"/>
 <key attr.name="programHash" attr.type="string" for="graph" id="programhash"/>
 <key attr.name="specification" attr.type="string" for="graph" id="specification"/>
 <key attr.name="architecture" attr.type="string" for="graph" id="architecture"/>
 <key attr.name="producer" attr.type="string" for="graph" id="producer"/>
 <key attr.name="creationTime" attr.type="string" for="graph" id="creationtime"/>
 <key attr.name="startline" attr.type="int" for="edge" id="startline"/>
 <key attr.name="endline" attr.type="int" for="edge" id="endline"/>
 <key attr.name="startoffset" attr.type="int" for="edge" id="startoffset"/>
 <key attr.name="endoffset" attr.type="int" for="edge" id="endoffset"/>
 <key attr.name="originFileName" attr.type="string" for="edge" id="originfile">
  <default>./12.func.ptrs.parsing.c</default>
 </key>
 <key attr.name="assumption" attr.type="string" for="edge" id="assumption"/>
 <key attr.name="assumption.scope" attr.type="string" for="edge" id="assumption.scope"/>
 <key attr.name="enterFunction" attr.type="string" for="edge" id="enterFunction"/>
 <key attr.name="returnFromFunction" attr.type="string" for="edge" id="returnFrom"/>
 <key attr.name="witness-type" attr.type="string" for="graph" id="witness-type"/>
 <key attr.name="inputWitnessHash" attr.type="string" for="graph" id="inputwitnesshash"/>
 <graph edgedefault="directed">
  <data key="witness-type">violation_witness</data>
  <data key="sourcecodelang">C</data>
  <data key="producer">CPAchecker 1.8-svn a776d662f5+ / kInduction</data>
  <data key="specification">CHECK( init(main()), LTL(G ! call(__VERIFIER_error())) )</data>
  <data key="programfile">./12.func.ptrs.parsing.c</data>
  <data key="programhash">31d7303947d41cbfbbeb7ac2be4f333600093bd522ba5bb2c615e434c6974930</data>
  <data key="architecture">32bit</data>
  <data key="creationtime">2019-06-27T09:39:44+02:00</data>
  <node id="A143">
   <data key="entry">true</data>
  </node>
  <node id="A505"/>
  <edge source="A143" target="A505">
   <data key="startline">29</data>
   <data key="endline">29</data>
   <data key="startoffset">18304</data>
   <data key="endoffset">18314</data>
   <data key="enterFunction">main</data>
  </edge>
  <node id="sink">
   <data key="sink">true</data>
  </node>
  <edge source="A505" target="sink">
   <data key="startline">34</data>
   <data key="endline">34</data>
   <data key="startoffset">18371</data>
   <data key="endoffset">18377</data>
   <data key="enterFunction">func1</data>
  </edge>
  <node id="A617"/>
  <edge source="A505" target="A617">
   <data key="startline">34</data>
   <data key="endline">34</data>
   <data key="startoffset">18371</data>
   <data key="endoffset">18375</data>
   <data key="enterFunction">func2</data>
  </edge>
  <node id="A705"/>
  <edge source="A617" target="A705">
   <data key="startline">15</data>
   <data key="endline">15</data>
   <data key="startoffset">18124</data>
   <data key="endoffset">18143</data>
   <data key="assumption">y == (50);</data>
   <data key="assumption.scope">func2</data>
  </edge>
  <node id="A732"/>
  <edge source="A705" target="A732">
   <data key="startline">16</data>
   <data key="endline">16</data>
   <data key="startoffset">18150</data>
   <data key="endoffset">18157</data>
   <data key="returnFrom">func2</data>
  </edge>
  <node id="A763"/>
  <edge source="A732" target="A763">
   <data key="startline">36</data>
   <data key="endline">36</data>
   <data key="startoffset">18399</data>
   <data key="endoffset">18403</data>
   <data key="enterFunction">func1</data>
  </edge>
  <node id="A769"/>
  <edge source="A763" target="A769">
   <data key="startline">10</data>
   <data key="endline">10</data>
   <data key="startoffset">18061</data>
   <data key="endoffset">18080</data>
   <data key="assumption">x == (49);</data>
   <data key="assumption.scope">func1</data>
  </edge>
  <node id="A771"/>
  <edge source="A769" target="A771">
   <data key="startline">11</data>
   <data key="endline">11</data>
   <data key="startoffset">18087</data>
   <data key="endoffset">18094</data>
   <data key="returnFrom">func1</data>
  </edge>
  <edge source="A771" target="sink">
   <data key="startline">38</data>
   <data key="endline">38</data>
   <data key="startoffset">18427</data>
   <data key="endoffset">18433</data>
   <data key="enterFunction">func1</data>
  </edge>
  <node id="A788"/>
  <edge source="A771" target="A788">
   <data key="startline">38</data>
   <data key="endline">38</data>
   <data key="startoffset">18427</data>
   <data key="endoffset">18431</data>
   <data key="enterFunction">func2</data>
  </edge>
  <node id="A791"/>
  <edge source="A788" target="A791">
   <data key="startline">15</data>
   <data key="endline">15</data>
   <data key="startoffset">18124</data>
   <data key="endoffset">18143</data>
   <data key="assumption">y == (50);</data>
   <data key="assumption.scope">func2</data>
  </edge>
  <node id="A792"/>
  <edge source="A791" target="A792">
   <data key="startline">16</data>
   <data key="endline">16</data>
   <data key="startoffset">18150</data>
   <data key="endoffset">18157</data>
   <data key="returnFrom">func2</data>
  </edge>
  <edge source="A792" target="sink">
   <data key="startline">39</data>
   <data key="endline">39</data>
   <data key="startoffset">18439</data>
   <data key="endoffset">18448</data>
   <data key="enterFunction">func1</data>
  </edge>
  <node id="A805"/>
  <edge source="A792" target="A805">
   <data key="startline">39</data>
   <data key="endline">39</data>
   <data key="startoffset">18439</data>
   <data key="endoffset">18446</data>
   <data key="enterFunction">func2</data>
  </edge>
  <node id="A811"/>
  <edge source="A805" target="A811">
   <data key="startline">15</data>
   <data key="endline">15</data>
   <data key="startoffset">18124</data>
   <data key="endoffset">18143</data>
   <data key="assumption">y == (50);</data>
   <data key="assumption.scope">func2</data>
  </edge>
  <node id="A813"/>
  <edge source="A811" target="A813">
   <data key="startline">16</data>
   <data key="endline">16</data>
   <data key="startoffset">18150</data>
   <data key="endoffset">18157</data>
   <data key="returnFrom">func2</data>
  </edge>
  <node id="A831"/>
  <edge source="A813" target="A831">
   <data key="startline">42</data>
   <data key="endline">42</data>
   <data key="startoffset">18481</data>
   <data key="endoffset">18485</data>
   <data key="enterFunction">func1</data>
  </edge>
  <node id="A835"/>
  <edge source="A831" target="A835">
   <data key="startline">10</data>
   <data key="endline">10</data>
   <data key="startoffset">18061</data>
   <data key="endoffset">18080</data>
   <data key="assumption">x == (49);</data>
   <data key="assumption.scope">func1</data>
  </edge>
  <node id="A836"/>
  <edge source="A835" target="A836">
   <data key="startline">11</data>
   <data key="endline">11</data>
   <data key="startoffset">18087</data>
   <data key="endoffset">18094</data>
   <data key="returnFrom">func1</data>
  </edge>
  <node id="A921"/>
  <edge source="A836" target="A921">
   <data key="startline">46</data>
   <data key="endline">46</data>
   <data key="startoffset">18547</data>
   <data key="endoffset">18556</data>
   <data key="enterFunction">func1</data>
  </edge>
  <node id="A924"/>
  <edge source="A921" target="A924">
   <data key="startline">10</data>
   <data key="endline">10</data>
   <data key="startoffset">18061</data>
   <data key="endoffset">18080</data>
   <data key="assumption">x == (49);</data>
   <data key="assumption.scope">func1</data>
  </edge>
  <node id="A929"/>
  <edge source="A924" target="A929">
   <data key="startline">11</data>
   <data key="endline">11</data>
   <data key="startoffset">18087</data>
   <data key="endoffset">18094</data>
   <data key="returnFrom">func1</data>
  </edge>
  <edge source="A929" target="sink">
   <data key="startline">47</data>
   <data key="endline">47</data>
   <data key="startoffset">18564</data>
   <data key="endoffset">18575</data>
   <data key="enterFunction">func1</data>
  </edge>
  <node id="A965"/>
  <edge source="A929" target="A965">
   <data key="startline">47</data>
   <data key="endline">47</data>
   <data key="startoffset">18564</data>
   <data key="endoffset">18573</data>
   <data key="enterFunction">func2</data>
  </edge>
  <node id="A967"/>
  <edge source="A965" target="A967">
   <data key="startline">15</data>
   <data key="endline">15</data>
   <data key="startoffset">18124</data>
   <data key="endoffset">18143</data>
   <data key="assumption">y == (50);</data>
   <data key="assumption.scope">func2</data>
  </edge>
  <node id="A968"/>
  <edge source="A967" target="A968">
   <data key="startline">16</data>
   <data key="endline">16</data>
   <data key="startoffset">18150</data>
   <data key="endoffset">18157</data>
   <data key="returnFrom">func2</data>
  </edge>
  <edge source="A968" target="sink">
   <data key="startline">48</data>
   <data key="endline">48</data>
   <data key="startoffset">18581</data>
   <data key="endoffset">18592</data>
   <data key="enterFunction">func1</data>
  </edge>
  <node id="A995"/>
  <edge source="A968" target="A995">
   <data key="startline">48</data>
   <data key="endline">48</data>
   <data key="startoffset">18581</data>
   <data key="endoffset">18590</data>
   <data key="enterFunction">func2</data>
  </edge>
  <node id="A1016"/>
  <edge source="A995" target="A1016">
   <data key="startline">15</data>
   <data key="endline">15</data>
   <data key="startoffset">18124</data>
   <data key="endoffset">18143</data>
   <data key="assumption">y == (50);</data>
   <data key="assumption.scope">func2</data>
  </edge>
  <node id="A1030"/>
  <edge source="A1016" target="A1030">
   <data key="startline">16</data>
   <data key="endline">16</data>
   <data key="startoffset">18150</data>
   <data key="endoffset">18157</data>
   <data key="returnFrom">func2</data>
  </edge>
  <node id="A1200"/>
  <edge source="A1030" target="A1200">
   <data key="startline">50</data>
   <data key="endline">50</data>
   <data key="startoffset">18599</data>
   <data key="endoffset">18604</data>
   <data key="enterFunction">blah</data>
  </edge>
  <node id="A1209"/>
  <edge source="A1200" target="A1209">
   <data key="startline">5</data>
   <data key="endline">5</data>
   <data key="startoffset">18011</data>
   <data key="endoffset">18019</data>
   <data key="enterFunction">f</data>
  </edge>
  <node id="A1215"/>
  <edge source="A1209" target="A1215">
   <data key="startline">21</data>
   <data key="endline">21</data>
   <data key="startoffset">18211</data>
   <data key="endoffset">18217</data>
   <data key="returnFrom">f</data>
  </edge>
  <node id="A1223"/>
  <edge source="A1215" target="A1223">
   <data key="startline">6</data>
   <data key="endline">6</data>
   <data key="startoffset">18027</data>
   <data key="endoffset">18033</data>
   <data key="returnFrom">blah</data>
  </edge>
  <node id="A1235">
   <data key="violation">true</data>
   <data key="violatedProperty">__VERIFIER_error(); called in line 25</data>
  </node>
  <edge source="A1223" target="A1235">
   <data key="startline">53</data>
   <data key="endline">53</data>
   <data key="startoffset">18657</data>
   <data key="endoffset">18670</data>
   <data key="enterFunction">error</data>
  </edge>
 </graph>
</graphml>
